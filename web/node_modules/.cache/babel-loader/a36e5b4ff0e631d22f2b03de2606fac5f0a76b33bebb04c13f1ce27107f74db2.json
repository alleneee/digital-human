{"ast":null,"code":"var _jsxFileName = \"/Users/niko/digital-human/frontend/src/components/DigitalHuman/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './DigitalHuman.css';\nimport { useConfig } from '../../contexts/ConfigContext';\nimport { useNotification } from '../../contexts/NotificationContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DigitalHuman = ({\n  modelPath\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [model, setModel] = useState(null);\n  const {\n    config\n  } = useConfig();\n  const {\n    success,\n    error: showError\n  } = useNotification();\n\n  // Live2D模型初始化\n  useEffect(() => {\n    let mounted = true;\n    let app = null;\n\n    // 如果使用EchoMimic，不加载Live2D模型\n    if (config.useEchoMimic) {\n      console.log('已启用EchoMimic，跳过Live2D模型加载');\n      setLoading(false);\n      setError(null);\n      return () => {};\n    }\n    const initLive2D = async () => {\n      if (!window.PIXI || !window.PIXI.live2d) {\n        // 加载必要的脚本\n        await loadScript('https://cdn.jsdelivr.net/npm/pixi.js@6.5.2/dist/browser/pixi.min.js');\n        await loadScript('https://cdn.jsdelivr.net/npm/pixi-live2d-display/dist/index.min.js');\n      }\n      setLoading(true);\n      setError(null);\n      try {\n        const canvas = canvasRef.current;\n\n        // 创建PIXI应用\n        app = new window.PIXI.Application({\n          view: canvas,\n          autoStart: true,\n          backgroundAlpha: 0,\n          backgroundColor: 0xffffff,\n          resizeTo: canvas.parentElement\n        });\n\n        // 设置模型缩放模式\n        window.PIXI.live2d.Live2DModel.registerTicker(app.ticker);\n\n        // 构建完整的模型路径，快速实用的方法\n        const fullModelPath = modelPath.startsWith('/') ? `${window.location.origin}${modelPath}` : `${window.location.origin}/${modelPath}`;\n        console.log(`开始加载Live2D模型: ${fullModelPath}`);\n        const live2dModel = await window.PIXI.live2d.Live2DModel.from(fullModelPath);\n\n        // 调整模型位置和缩放\n        const scaleX = canvas.width * 0.8 / live2dModel.width;\n        const scaleY = canvas.height * 0.8 / live2dModel.height;\n        const scale = Math.min(scaleX, scaleY);\n        live2dModel.scale.set(scale);\n        live2dModel.anchor.set(0.5, 0.5);\n        live2dModel.position.set(canvas.width / 2, canvas.height / 2);\n\n        // 创建容器并添加模型\n        const container = new window.PIXI.Container();\n        container.addChild(live2dModel);\n        app.stage.addChild(container);\n\n        // 监听窗口大小变化\n        window.addEventListener('resize', () => {\n          if (live2dModel) {\n            // 调整画布尺寸\n            app.renderer.resize(canvas.parentElement.clientWidth, canvas.parentElement.clientHeight);\n\n            // 重新定位模型\n            live2dModel.position.set(app.renderer.width / 2, app.renderer.height / 2);\n          }\n        });\n        if (mounted) {\n          setModel(live2dModel);\n          setLoading(false);\n          success('Live2D模型加载成功');\n        }\n      } catch (err) {\n        console.error('加载Live2D模型失败:', err);\n        if (mounted) {\n          setError('模型加载失败，请检查路径是否正确');\n          setLoading(false);\n          showError('Live2D模型加载失败，请检查路径是否正确');\n        }\n      }\n    };\n    initLive2D();\n    return () => {\n      mounted = false;\n      if (app) {\n        app.destroy(true);\n      }\n    };\n  }, [modelPath, success, showError, config.useEchoMimic]);\n\n  // 处理服务器动画消息\n  useEffect(() => {\n    const handleServerMessage = event => {\n      const message = event.detail;\n\n      // 只有当不使用EchoMimic时才处理动画\n      if (message.type === 'response' && !message.useEchoMimic && message.animation && model) {\n        playAnimation(model, message.animation);\n      }\n    };\n    window.addEventListener('server-message', handleServerMessage);\n    return () => {\n      window.removeEventListener('server-message', handleServerMessage);\n    };\n  }, [model, playAnimation]);\n\n  // 播放动画\n  const playAnimation = (model, animation) => {\n    try {\n      // 播放表情\n      if (animation.expression) {\n        var _model$internalModel$;\n        const expressionIndex = (_model$internalModel$ = model.internalModel.motionManager.expressionManager) === null || _model$internalModel$ === void 0 ? void 0 : _model$internalModel$.expressionNames.findIndex(name => name.toLowerCase().includes(animation.expression));\n        if (expressionIndex !== -1 && expressionIndex !== undefined) {\n          var _model$internalModel$2;\n          (_model$internalModel$2 = model.internalModel.motionManager.expressionManager) === null || _model$internalModel$2 === void 0 ? void 0 : _model$internalModel$2.setExpression(expressionIndex);\n        }\n      }\n\n      // 播放动作\n      if (animation.motion) {\n        playMotion(model, animation.motion, animation.intensity || 0.8);\n      }\n    } catch (error) {\n      console.error('播放动画失败:', error);\n    }\n  };\n\n  // 播放动作\n  const playMotion = (model, motionName, intensity = 0.8) => {\n    try {\n      let motionGroup = 'Idle';\n      switch (motionName.toLowerCase()) {\n        case 'talking':\n          motionGroup = 'Talk';\n          break;\n        case 'nodding':\n          motionGroup = 'Nod';\n          break;\n        case 'thinking':\n          motionGroup = 'Think';\n          break;\n        case 'greeting':\n          motionGroup = 'Greeting';\n          break;\n        case 'surprised':\n          motionGroup = 'Surprised';\n          break;\n        default:\n          motionGroup = 'Idle';\n      }\n\n      // 查找模型中是否有对应的动作组\n      const groups = model.internalModel.motionManager.definitions;\n      const availableGroups = Object.keys(groups);\n\n      // 如果没有完全匹配的组，尝试部分匹配\n      const bestMatch = availableGroups.find(group => group.toLowerCase().includes(motionGroup.toLowerCase())) || availableGroups[0];\n      if (bestMatch) {\n        const availableMotions = groups[bestMatch].length;\n        const motionIndex = Math.floor(Math.random() * availableMotions);\n        model.motion(bestMatch, motionIndex, intensity);\n      }\n    } catch (error) {\n      console.error('播放动作失败:', error);\n    }\n  };\n\n  // 加载脚本工具函数\n  const loadScript = src => {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.async = true;\n      script.onload = resolve;\n      script.onerror = reject;\n      document.head.appendChild(script);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"digital-human-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"model-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        id: \"live2d-canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-spinner fa-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Live2D \\u6A21\\u578B\\u52A0\\u8F7D\\u4E2D...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), error && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-placeholder error\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-exclamation-triangle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Live2D\\u6A21\\u578B\\u52A0\\u8F7D\\u5931\\u8D25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n_s(DigitalHuman, \"kKkE2oIny7JPqXviAmzTNUo+r9M=\", false, function () {\n  return [useConfig, useNotification];\n});\n_c = DigitalHuman;\nexport default DigitalHuman;\nvar _c;\n$RefreshReg$(_c, \"DigitalHuman\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useConfig","useNotification","jsxDEV","_jsxDEV","DigitalHuman","modelPath","_s","canvasRef","loading","setLoading","error","setError","model","setModel","config","success","showError","mounted","app","useEchoMimic","console","log","initLive2D","window","PIXI","live2d","loadScript","canvas","current","Application","view","autoStart","backgroundAlpha","backgroundColor","resizeTo","parentElement","Live2DModel","registerTicker","ticker","fullModelPath","startsWith","location","origin","live2dModel","from","scaleX","width","scaleY","height","scale","Math","min","set","anchor","position","container","Container","addChild","stage","addEventListener","renderer","resize","clientWidth","clientHeight","err","destroy","handleServerMessage","event","message","detail","type","animation","playAnimation","removeEventListener","expression","_model$internalModel$","expressionIndex","internalModel","motionManager","expressionManager","expressionNames","findIndex","name","toLowerCase","includes","undefined","_model$internalModel$2","setExpression","motion","playMotion","intensity","motionName","motionGroup","groups","definitions","availableGroups","Object","keys","bestMatch","find","group","availableMotions","length","motionIndex","floor","random","src","Promise","resolve","reject","script","document","createElement","async","onload","onerror","head","appendChild","className","children","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/niko/digital-human/frontend/src/components/DigitalHuman/index.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './DigitalHuman.css';\nimport { useConfig } from '../../contexts/ConfigContext';\nimport { useNotification } from '../../contexts/NotificationContext';\n\nconst DigitalHuman = ({ modelPath }) => {\n  const canvasRef = useRef(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [model, setModel] = useState(null);\n  const { config } = useConfig();\n  const { success, error: showError } = useNotification();\n\n  // Live2D模型初始化\n  useEffect(() => {\n    let mounted = true;\n    let app = null;\n    \n    // 如果使用EchoMimic，不加载Live2D模型\n    if (config.useEchoMimic) {\n      console.log('已启用EchoMimic，跳过Live2D模型加载');\n      setLoading(false);\n      setError(null);\n      return () => {};\n    }\n    \n    const initLive2D = async () => {\n      if (!window.PIXI || !window.PIXI.live2d) {\n        // 加载必要的脚本\n        await loadScript('https://cdn.jsdelivr.net/npm/pixi.js@6.5.2/dist/browser/pixi.min.js');\n        await loadScript('https://cdn.jsdelivr.net/npm/pixi-live2d-display/dist/index.min.js');\n      }\n      \n      setLoading(true);\n      setError(null);\n      \n      try {\n        const canvas = canvasRef.current;\n        \n        // 创建PIXI应用\n        app = new window.PIXI.Application({\n          view: canvas,\n          autoStart: true,\n          backgroundAlpha: 0,\n          backgroundColor: 0xffffff,\n          resizeTo: canvas.parentElement\n        });\n        \n        // 设置模型缩放模式\n        window.PIXI.live2d.Live2DModel.registerTicker(app.ticker);\n        \n        // 构建完整的模型路径，快速实用的方法\n        const fullModelPath = modelPath.startsWith('/') \n          ? `${window.location.origin}${modelPath}` \n          : `${window.location.origin}/${modelPath}`;\n          \n        console.log(`开始加载Live2D模型: ${fullModelPath}`);\n        const live2dModel = await window.PIXI.live2d.Live2DModel.from(fullModelPath);\n        \n        // 调整模型位置和缩放\n        const scaleX = (canvas.width * 0.8) / live2dModel.width;\n        const scaleY = (canvas.height * 0.8) / live2dModel.height;\n        const scale = Math.min(scaleX, scaleY);\n        \n        live2dModel.scale.set(scale);\n        live2dModel.anchor.set(0.5, 0.5);\n        live2dModel.position.set(canvas.width / 2, canvas.height / 2);\n        \n        // 创建容器并添加模型\n        const container = new window.PIXI.Container();\n        container.addChild(live2dModel);\n        app.stage.addChild(container);\n        \n        // 监听窗口大小变化\n        window.addEventListener('resize', () => {\n          if (live2dModel) {\n            // 调整画布尺寸\n            app.renderer.resize(canvas.parentElement.clientWidth, canvas.parentElement.clientHeight);\n            \n            // 重新定位模型\n            live2dModel.position.set(\n              app.renderer.width / 2,\n              app.renderer.height / 2\n            );\n          }\n        });\n        \n        if (mounted) {\n          setModel(live2dModel);\n          setLoading(false);\n          success('Live2D模型加载成功');\n        }\n        \n      } catch (err) {\n        console.error('加载Live2D模型失败:', err);\n        if (mounted) {\n          setError('模型加载失败，请检查路径是否正确');\n          setLoading(false);\n          showError('Live2D模型加载失败，请检查路径是否正确');\n        }\n      }\n    };\n    \n    initLive2D();\n    \n    return () => {\n      mounted = false;\n      if (app) {\n        app.destroy(true);\n      }\n    };\n  }, [modelPath, success, showError, config.useEchoMimic]);\n\n  // 处理服务器动画消息\n  useEffect(() => {\n    const handleServerMessage = (event) => {\n      const message = event.detail;\n      \n      // 只有当不使用EchoMimic时才处理动画\n      if (message.type === 'response' && !message.useEchoMimic && message.animation && model) {\n        playAnimation(model, message.animation);\n      }\n    };\n    \n    window.addEventListener('server-message', handleServerMessage);\n    \n    return () => {\n      window.removeEventListener('server-message', handleServerMessage);\n    };\n  }, [model, playAnimation]);\n\n  // 播放动画\n  const playAnimation = (model, animation) => {\n    try {\n      // 播放表情\n      if (animation.expression) {\n        const expressionIndex = model.internalModel.motionManager.expressionManager?.expressionNames.findIndex(\n          name => name.toLowerCase().includes(animation.expression)\n        );\n        \n        if (expressionIndex !== -1 && expressionIndex !== undefined) {\n          model.internalModel.motionManager.expressionManager?.setExpression(expressionIndex);\n        }\n      }\n      \n      // 播放动作\n      if (animation.motion) {\n        playMotion(model, animation.motion, animation.intensity || 0.8);\n      }\n    } catch (error) {\n      console.error('播放动画失败:', error);\n    }\n  };\n\n  // 播放动作\n  const playMotion = (model, motionName, intensity = 0.8) => {\n    try {\n      let motionGroup = 'Idle';\n      \n      switch (motionName.toLowerCase()) {\n        case 'talking':\n          motionGroup = 'Talk';\n          break;\n        case 'nodding':\n          motionGroup = 'Nod';\n          break;\n        case 'thinking':\n          motionGroup = 'Think';\n          break;\n        case 'greeting':\n          motionGroup = 'Greeting';\n          break;\n        case 'surprised':\n          motionGroup = 'Surprised';\n          break;\n        default:\n          motionGroup = 'Idle';\n      }\n      \n      // 查找模型中是否有对应的动作组\n      const groups = model.internalModel.motionManager.definitions;\n      const availableGroups = Object.keys(groups);\n      \n      // 如果没有完全匹配的组，尝试部分匹配\n      const bestMatch = availableGroups.find(group => \n        group.toLowerCase().includes(motionGroup.toLowerCase())\n      ) || availableGroups[0];\n      \n      if (bestMatch) {\n        const availableMotions = groups[bestMatch].length;\n        const motionIndex = Math.floor(Math.random() * availableMotions);\n        model.motion(bestMatch, motionIndex, intensity);\n      }\n    } catch (error) {\n      console.error('播放动作失败:', error);\n    }\n  };\n\n  // 加载脚本工具函数\n  const loadScript = (src) => {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.async = true;\n      script.onload = resolve;\n      script.onerror = reject;\n      document.head.appendChild(script);\n    });\n  };\n\n  return (\n    <div className=\"digital-human-section\">\n      <div className=\"model-container\">\n        <canvas ref={canvasRef} id=\"live2d-canvas\"></canvas>\n        \n        {loading && (\n          <div className=\"model-placeholder\">\n            <i className=\"fas fa-spinner fa-spin\"></i>\n            <p>Live2D 模型加载中...</p>\n          </div>\n        )}\n        \n        {error && !loading && (\n          <div className=\"model-placeholder error\">\n            <i className=\"fas fa-exclamation-triangle\"></i>\n            <p>Live2D模型加载失败</p>\n            <p className=\"error-message\">{error}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DigitalHuman;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}