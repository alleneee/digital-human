{"ast":null,"code":"var _jsxFileName = \"/Users/niko/digital-human/frontend/src/components/DigitalHuman/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './DigitalHuman.css';\nimport { useConfig } from '../../contexts/ConfigContext';\nimport { useNotification } from '../../contexts/NotificationContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DigitalHuman = ({\n  modelPath\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [model, setModel] = useState(null);\n  const {\n    config\n  } = useConfig();\n  const {\n    success,\n    error: showError\n  } = useNotification();\n\n  // Live2D模型初始化\n  useEffect(() => {\n    let mounted = true;\n    let app = null;\n\n    // 如果使用EchoMimic，不加载Live2D模型\n    if (config.useEchoMimic) {\n      console.log('已启用EchoMimic，跳过Live2D模型加载');\n      setLoading(false);\n      setError(null);\n      return () => {};\n    }\n\n    // 初始化Live2D模型\n    const initLive2D = async () => {\n      console.log('初始化Live2D模型');\n      try {\n        // 确保PIXI和Live2D已经加载\n        if (!window.PIXI) {\n          throw new Error('PIXI未加载，请检查网络连接并刷新页面');\n        }\n        if (!window.PIXI.live2d || !window.PIXI.live2d.Live2DModel) {\n          throw new Error('PIXI.live2d未加载，请检查网络连接并刷新页面');\n        }\n        console.log('PIXI版本:', window.PIXI.VERSION);\n        console.log('PIXI.live2d版本:', window.PIXI.live2d.version || '未知');\n        setLoading(true);\n        setError(null);\n        const canvas = canvasRef.current;\n        if (!canvas) {\n          throw new Error('Canvas元素不存在');\n        }\n\n        // 创建PIXI应用\n        console.log('创建PIXI应用');\n        app = new window.PIXI.Application({\n          view: canvas,\n          autoStart: true,\n          backgroundAlpha: 0,\n          backgroundColor: 0xffffff,\n          width: canvas.parentElement.clientWidth,\n          height: canvas.parentElement.clientHeight,\n          resizeTo: canvas.parentElement\n        });\n\n        // 注册ticker\n        console.log('注册PIXI ticker');\n        window.PIXI.live2d.Live2DModel.registerTicker(app.ticker);\n\n        // 构建完整的模型路径\n        const fullModelPath = modelPath.startsWith('/') ? `${window.location.origin}${modelPath}` : `${window.location.origin}/${modelPath}`;\n        console.log(`开始加载Live2D模型: ${fullModelPath}`);\n\n        // 加载模型\n        const live2dModel = await window.PIXI.live2d.Live2DModel.from(fullModelPath);\n        if (!live2dModel) {\n          throw new Error('模型加载失败，请检查模型文件是否存在');\n        }\n        console.log('模型加载成功');\n\n        // 调整模型位置和缩放\n        const scaleX = canvas.width * 0.8 / live2dModel.width;\n        const scaleY = canvas.height * 0.8 / live2dModel.height;\n        const scale = Math.min(scaleX, scaleY);\n        live2dModel.scale.set(scale);\n        live2dModel.anchor.set(0.5, 0.5);\n        live2dModel.position.set(canvas.width / 2, canvas.height / 2);\n\n        // 添加模型到舞台\n        app.stage.addChild(live2dModel);\n\n        // 监听窗口大小变化\n        const resizeHandler = () => {\n          if (live2dModel) {\n            app.renderer.resize(canvas.parentElement.clientWidth, canvas.parentElement.clientHeight);\n            live2dModel.position.set(app.renderer.width / 2, app.renderer.height / 2);\n          }\n        };\n        window.addEventListener('resize', resizeHandler);\n        if (mounted) {\n          setModel(live2dModel);\n          setLoading(false);\n          success('Live2D模型加载成功');\n        }\n      } catch (err) {\n        console.error('加载Live2D模型失败:', err);\n        if (mounted) {\n          setError(err.message || '模型加载失败，请检查路径是否正确');\n          setLoading(false);\n          showError('Live2D模型加载失败: ' + (err.message || '请检查路径是否正确'));\n        }\n      }\n    };\n\n    // 确保DOM和脚本已完全加载后再初始化\n    const timer = setTimeout(() => {\n      initLive2D();\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n      mounted = false;\n      if (app) {\n        app.destroy(true, {\n          children: true,\n          texture: true,\n          baseTexture: true\n        });\n      }\n    };\n  }, [modelPath, success, showError, config.useEchoMimic]);\n\n  // 处理服务器动画消息\n  useEffect(() => {\n    const handleServerMessage = event => {\n      const message = event.detail;\n      if (message.type === 'response' && !message.useEchoMimic && message.animation && model) {\n        playAnimation(model, message.animation);\n      }\n    };\n    window.addEventListener('server-message', handleServerMessage);\n    return () => {\n      window.removeEventListener('server-message', handleServerMessage);\n    };\n  }, [model]);\n\n  // 播放动画\n  const playAnimation = (model, animation) => {\n    try {\n      // 播放表情\n      if (animation.expression) {\n        var _model$internalModel$;\n        const expressionIndex = (_model$internalModel$ = model.internalModel.motionManager.expressionManager) === null || _model$internalModel$ === void 0 ? void 0 : _model$internalModel$.expressionNames.findIndex(name => name.toLowerCase().includes(animation.expression));\n        if (expressionIndex !== -1 && expressionIndex !== undefined) {\n          var _model$internalModel$2;\n          (_model$internalModel$2 = model.internalModel.motionManager.expressionManager) === null || _model$internalModel$2 === void 0 ? void 0 : _model$internalModel$2.setExpression(expressionIndex);\n        }\n      }\n\n      // 播放动作\n      if (animation.motion) {\n        playMotion(model, animation.motion, animation.intensity || 0.8);\n      }\n    } catch (error) {\n      console.error('播放动画失败:', error);\n    }\n  };\n\n  // 播放动作\n  const playMotion = (model, motionName, intensity = 0.8) => {\n    try {\n      let motionGroup = 'Idle';\n      switch (motionName.toLowerCase()) {\n        case 'talking':\n          motionGroup = 'Talk';\n          break;\n        case 'nodding':\n          motionGroup = 'Nod';\n          break;\n        case 'thinking':\n          motionGroup = 'Think';\n          break;\n        case 'greeting':\n          motionGroup = 'Greeting';\n          break;\n        case 'surprised':\n          motionGroup = 'Surprised';\n          break;\n        default:\n          motionGroup = 'Idle';\n      }\n\n      // 查找模型中是否有对应的动作组\n      const groups = model.internalModel.motionManager.definitions;\n      const availableGroups = Object.keys(groups);\n\n      // 如果没有完全匹配的组，尝试部分匹配\n      const bestMatch = availableGroups.find(group => group.toLowerCase().includes(motionGroup.toLowerCase())) || availableGroups[0];\n      if (bestMatch) {\n        const availableMotions = groups[bestMatch].length;\n        const motionIndex = Math.floor(Math.random() * availableMotions);\n        model.motion(bestMatch, motionIndex, intensity);\n      }\n    } catch (error) {\n      console.error('播放动作失败:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"digital-human-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"model-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        id: \"live2d-canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-spinner fa-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Live2D \\u6A21\\u578B\\u52A0\\u8F7D\\u4E2D...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), error && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-placeholder error\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-exclamation-triangle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Live2D\\u6A21\\u578B\\u52A0\\u8F7D\\u5931\\u8D25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"retry-button\",\n          onClick: () => window.location.reload(),\n          children: \"\\u5237\\u65B0\\u9875\\u9762\\u91CD\\u8BD5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n_s(DigitalHuman, \"kKkE2oIny7JPqXviAmzTNUo+r9M=\", false, function () {\n  return [useConfig, useNotification];\n});\n_c = DigitalHuman;\nexport default DigitalHuman;\nvar _c;\n$RefreshReg$(_c, \"DigitalHuman\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useConfig","useNotification","jsxDEV","_jsxDEV","DigitalHuman","modelPath","_s","canvasRef","loading","setLoading","error","setError","model","setModel","config","success","showError","mounted","app","useEchoMimic","console","log","initLive2D","window","PIXI","Error","live2d","Live2DModel","VERSION","version","canvas","current","Application","view","autoStart","backgroundAlpha","backgroundColor","width","parentElement","clientWidth","height","clientHeight","resizeTo","registerTicker","ticker","fullModelPath","startsWith","location","origin","live2dModel","from","scaleX","scaleY","scale","Math","min","set","anchor","position","stage","addChild","resizeHandler","renderer","resize","addEventListener","err","message","timer","setTimeout","clearTimeout","destroy","children","texture","baseTexture","handleServerMessage","event","detail","type","animation","playAnimation","removeEventListener","expression","_model$internalModel$","expressionIndex","internalModel","motionManager","expressionManager","expressionNames","findIndex","name","toLowerCase","includes","undefined","_model$internalModel$2","setExpression","motion","playMotion","intensity","motionName","motionGroup","groups","definitions","availableGroups","Object","keys","bestMatch","find","group","availableMotions","length","motionIndex","floor","random","className","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","reload","_c","$RefreshReg$"],"sources":["/Users/niko/digital-human/frontend/src/components/DigitalHuman/index.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './DigitalHuman.css';\nimport { useConfig } from '../../contexts/ConfigContext';\nimport { useNotification } from '../../contexts/NotificationContext';\n\nconst DigitalHuman = ({ modelPath }) => {\n  const canvasRef = useRef(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [model, setModel] = useState(null);\n  const { config } = useConfig();\n  const { success, error: showError } = useNotification();\n\n  // Live2D模型初始化\n  useEffect(() => {\n    let mounted = true;\n    let app = null;\n    \n    // 如果使用EchoMimic，不加载Live2D模型\n    if (config.useEchoMimic) {\n      console.log('已启用EchoMimic，跳过Live2D模型加载');\n      setLoading(false);\n      setError(null);\n      return () => {};\n    }\n    \n    // 初始化Live2D模型\n    const initLive2D = async () => {\n      console.log('初始化Live2D模型');\n      \n      try {\n        // 确保PIXI和Live2D已经加载\n        if (!window.PIXI) {\n          throw new Error('PIXI未加载，请检查网络连接并刷新页面');\n        }\n        \n        if (!window.PIXI.live2d || !window.PIXI.live2d.Live2DModel) {\n          throw new Error('PIXI.live2d未加载，请检查网络连接并刷新页面');\n        }\n        \n        console.log('PIXI版本:', window.PIXI.VERSION);\n        console.log('PIXI.live2d版本:', window.PIXI.live2d.version || '未知');\n        \n        setLoading(true);\n        setError(null);\n        \n        const canvas = canvasRef.current;\n        if (!canvas) {\n          throw new Error('Canvas元素不存在');\n        }\n        \n        // 创建PIXI应用\n        console.log('创建PIXI应用');\n        app = new window.PIXI.Application({\n          view: canvas,\n          autoStart: true,\n          backgroundAlpha: 0,\n          backgroundColor: 0xffffff,\n          width: canvas.parentElement.clientWidth,\n          height: canvas.parentElement.clientHeight,\n          resizeTo: canvas.parentElement\n        });\n        \n        // 注册ticker\n        console.log('注册PIXI ticker');\n        window.PIXI.live2d.Live2DModel.registerTicker(app.ticker);\n        \n        // 构建完整的模型路径\n        const fullModelPath = modelPath.startsWith('/') \n          ? `${window.location.origin}${modelPath}` \n          : `${window.location.origin}/${modelPath}`;\n          \n        console.log(`开始加载Live2D模型: ${fullModelPath}`);\n        \n        // 加载模型\n        const live2dModel = await window.PIXI.live2d.Live2DModel.from(fullModelPath);\n        \n        if (!live2dModel) {\n          throw new Error('模型加载失败，请检查模型文件是否存在');\n        }\n        \n        console.log('模型加载成功');\n        \n        // 调整模型位置和缩放\n        const scaleX = (canvas.width * 0.8) / live2dModel.width;\n        const scaleY = (canvas.height * 0.8) / live2dModel.height;\n        const scale = Math.min(scaleX, scaleY);\n        \n        live2dModel.scale.set(scale);\n        live2dModel.anchor.set(0.5, 0.5);\n        live2dModel.position.set(canvas.width / 2, canvas.height / 2);\n        \n        // 添加模型到舞台\n        app.stage.addChild(live2dModel);\n        \n        // 监听窗口大小变化\n        const resizeHandler = () => {\n          if (live2dModel) {\n            app.renderer.resize(canvas.parentElement.clientWidth, canvas.parentElement.clientHeight);\n            live2dModel.position.set(app.renderer.width / 2, app.renderer.height / 2);\n          }\n        };\n        \n        window.addEventListener('resize', resizeHandler);\n        \n        if (mounted) {\n          setModel(live2dModel);\n          setLoading(false);\n          success('Live2D模型加载成功');\n        }\n      } catch (err) {\n        console.error('加载Live2D模型失败:', err);\n        if (mounted) {\n          setError(err.message || '模型加载失败，请检查路径是否正确');\n          setLoading(false);\n          showError('Live2D模型加载失败: ' + (err.message || '请检查路径是否正确'));\n        }\n      }\n    };\n    \n    // 确保DOM和脚本已完全加载后再初始化\n    const timer = setTimeout(() => {\n      initLive2D();\n    }, 1000);\n    \n    return () => {\n      clearTimeout(timer);\n      mounted = false;\n      if (app) {\n        app.destroy(true, {children: true, texture: true, baseTexture: true});\n      }\n    };\n  }, [modelPath, success, showError, config.useEchoMimic]);\n\n  // 处理服务器动画消息\n  useEffect(() => {\n    const handleServerMessage = (event) => {\n      const message = event.detail;\n      if (message.type === 'response' && !message.useEchoMimic && message.animation && model) {\n        playAnimation(model, message.animation);\n      }\n    };\n    \n    window.addEventListener('server-message', handleServerMessage);\n    return () => {\n      window.removeEventListener('server-message', handleServerMessage);\n    };\n  }, [model]);\n\n  // 播放动画\n  const playAnimation = (model, animation) => {\n    try {\n      // 播放表情\n      if (animation.expression) {\n        const expressionIndex = model.internalModel.motionManager.expressionManager?.expressionNames.findIndex(\n          name => name.toLowerCase().includes(animation.expression)\n        );\n        \n        if (expressionIndex !== -1 && expressionIndex !== undefined) {\n          model.internalModel.motionManager.expressionManager?.setExpression(expressionIndex);\n        }\n      }\n      \n      // 播放动作\n      if (animation.motion) {\n        playMotion(model, animation.motion, animation.intensity || 0.8);\n      }\n    } catch (error) {\n      console.error('播放动画失败:', error);\n    }\n  };\n\n  // 播放动作\n  const playMotion = (model, motionName, intensity = 0.8) => {\n    try {\n      let motionGroup = 'Idle';\n      \n      switch (motionName.toLowerCase()) {\n        case 'talking':\n          motionGroup = 'Talk';\n          break;\n        case 'nodding':\n          motionGroup = 'Nod';\n          break;\n        case 'thinking':\n          motionGroup = 'Think';\n          break;\n        case 'greeting':\n          motionGroup = 'Greeting';\n          break;\n        case 'surprised':\n          motionGroup = 'Surprised';\n          break;\n        default:\n          motionGroup = 'Idle';\n      }\n      \n      // 查找模型中是否有对应的动作组\n      const groups = model.internalModel.motionManager.definitions;\n      const availableGroups = Object.keys(groups);\n      \n      // 如果没有完全匹配的组，尝试部分匹配\n      const bestMatch = availableGroups.find(group => \n        group.toLowerCase().includes(motionGroup.toLowerCase())\n      ) || availableGroups[0];\n      \n      if (bestMatch) {\n        const availableMotions = groups[bestMatch].length;\n        const motionIndex = Math.floor(Math.random() * availableMotions);\n        model.motion(bestMatch, motionIndex, intensity);\n      }\n    } catch (error) {\n      console.error('播放动作失败:', error);\n    }\n  };\n\n  return (\n    <div className=\"digital-human-section\">\n      <div className=\"model-container\">\n        <canvas ref={canvasRef} id=\"live2d-canvas\"></canvas>\n        \n        {loading && (\n          <div className=\"model-placeholder\">\n            <i className=\"fas fa-spinner fa-spin\"></i>\n            <p>Live2D 模型加载中...</p>\n          </div>\n        )}\n        \n        {error && !loading && (\n          <div className=\"model-placeholder error\">\n            <i className=\"fas fa-exclamation-triangle\"></i>\n            <p>Live2D模型加载失败</p>\n            <p className=\"error-message\">{error}</p>\n            <button \n              className=\"retry-button\"\n              onClick={() => window.location.reload()}\n            >\n              刷新页面重试\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DigitalHuman;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}