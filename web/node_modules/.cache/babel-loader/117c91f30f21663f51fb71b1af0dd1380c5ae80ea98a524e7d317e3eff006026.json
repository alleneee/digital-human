{"ast":null,"code":"var _jsxFileName = \"/Users/niko/digital-human/frontend/src/components/SettingsPanel/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useConfig } from '../../contexts/ConfigContext';\nimport { useNotification } from '../../contexts/NotificationContext';\nimport './SettingsPanel.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SettingsPanel = () => {\n  _s();\n  const {\n    config,\n    updateConfig\n  } = useConfig();\n  const {\n    success,\n    error\n  } = useNotification();\n  const [isOpen, setIsOpen] = useState(false);\n  const [presetImages, setPresetImages] = useState([]);\n  const [selectedGender, setSelectedGender] = useState('woman');\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // 处理设置面板的开关\n  const togglePanel = () => {\n    setIsOpen(!isOpen);\n  };\n\n  // 切换EchoMimic功能\n  const handleEchoMimicToggle = e => {\n    updateConfig({\n      useEchoMimic: e.target.checked\n    });\n  };\n\n  // 更新语言设置\n  const handleLanguageChange = e => {\n    updateConfig({\n      language: e.target.value\n    });\n  };\n\n  // 获取预设图像列表\n  const fetchPresetImages = async () => {\n    try {\n      setIsLoading(true);\n      const gender = selectedGender; // 'man' 或 'woman'\n      const response = await fetch(`http://localhost:8000/api/preset_images?gender=${gender}`);\n      if (!response.ok) {\n        throw new Error(`服务器返回错误: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('获取到预设图像数据:', data);\n      setPresetImages(data.images || []);\n    } catch (err) {\n      console.error('获取预设图像错误:', err);\n      error('获取预设图像失败: ' + err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 当性别选择变化时，重新获取图像\n  useEffect(() => {\n    if (isOpen) {\n      fetchPresetImages();\n    }\n  }, [selectedGender, isOpen]);\n\n  // 选择预设图像\n  const handleSelectImage = async imagePath => {\n    setSelectedImage(imagePath);\n    console.log('选择图像路径:', imagePath);\n    try {\n      const response = await fetch('http://localhost:8000/api/use_preset_image', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          image_path: imagePath\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`服务器返回错误: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('服务器响应:', data);\n      if (data.success) {\n        updateConfig({\n          refImagePath: imagePath\n        });\n        success('参考图像已更新');\n      } else {\n        throw new Error(data.error || '更新参考图像失败');\n      }\n    } catch (err) {\n      console.error('设置参考图像失败:', err);\n      error('设置参考图像失败: ' + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"settings-toggle\",\n      onClick: togglePanel,\n      children: \"\\u8BBE\\u7F6E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `settings-panel ${isOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u8BBE\\u7F6E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"settings-close\",\n          onClick: togglePanel,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u57FA\\u672C\\u8BBE\\u7F6E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u542F\\u7528EchoMimic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"toggle-switch\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: config.useEchoMimic,\n                onChange: handleEchoMimicToggle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"toggle-slider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u8BED\\u8A00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: config.language,\n              onChange: handleLanguageChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"zh\",\n                children: \"\\u4E2D\\u6587\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"en\",\n                children: \"\\u82F1\\u8BED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), config.useEchoMimic && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"EchoMimic\\u8BBE\\u7F6E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u9009\\u62E9\\u6027\\u522B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedGender,\n              onChange: e => setSelectedGender(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"woman\",\n                children: \"\\u5973\\u6027\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"man\",\n                children: \"\\u7537\\u6027\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u9884\\u8BBE\\u53C2\\u8003\\u56FE\\u50CF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preset-images-grid\",\n              children: presetImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `preset-image-item ${selectedImage === image.path ? 'selected' : ''}`,\n                onClick: () => handleSelectImage(image.path),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: image.thumbnail ? `http://localhost:8000${image.thumbnail}` : `http://localhost:8000/static/preset_images/${selectedGender}/${index + 1}.png`,\n                  alt: `参考图像 ${index + 1}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preset-image-overlay\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\u9009\\u62E9\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SettingsPanel, \"t0oDvLvfmHKtAzNzrVEMiNmN3iY=\", false, function () {\n  return [useConfig, useNotification];\n});\n_c = SettingsPanel;\nexport default SettingsPanel;\nvar _c;\n$RefreshReg$(_c, \"SettingsPanel\");","map":{"version":3,"names":["React","useState","useEffect","useConfig","useNotification","jsxDEV","_jsxDEV","Fragment","_Fragment","SettingsPanel","_s","config","updateConfig","success","error","isOpen","setIsOpen","presetImages","setPresetImages","selectedGender","setSelectedGender","selectedImage","setSelectedImage","isLoading","setIsLoading","togglePanel","handleEchoMimicToggle","e","useEchoMimic","target","checked","handleLanguageChange","language","value","fetchPresetImages","gender","response","fetch","ok","Error","status","data","json","console","log","images","err","message","handleSelectImage","imagePath","method","headers","body","JSON","stringify","image_path","refImagePath","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","map","image","index","path","src","thumbnail","alt","_c","$RefreshReg$"],"sources":["/Users/niko/digital-human/frontend/src/components/SettingsPanel/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useConfig } from '../../contexts/ConfigContext';\nimport { useNotification } from '../../contexts/NotificationContext';\nimport './SettingsPanel.css';\n\nconst SettingsPanel = () => {\n  const { config, updateConfig } = useConfig();\n  const { success, error } = useNotification();\n  const [isOpen, setIsOpen] = useState(false);\n  const [presetImages, setPresetImages] = useState([]);\n  const [selectedGender, setSelectedGender] = useState('woman');\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // 处理设置面板的开关\n  const togglePanel = () => {\n    setIsOpen(!isOpen);\n  };\n\n  // 切换EchoMimic功能\n  const handleEchoMimicToggle = (e) => {\n    updateConfig({ useEchoMimic: e.target.checked });\n  };\n\n  // 更新语言设置\n  const handleLanguageChange = (e) => {\n    updateConfig({ language: e.target.value });\n  };\n\n  // 获取预设图像列表\n  const fetchPresetImages = async () => {\n    try {\n      setIsLoading(true);\n      const gender = selectedGender; // 'man' 或 'woman'\n      const response = await fetch(`http://localhost:8000/api/preset_images?gender=${gender}`);\n      if (!response.ok) {\n        throw new Error(`服务器返回错误: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('获取到预设图像数据:', data);\n      setPresetImages(data.images || []);\n    } catch (err) {\n      console.error('获取预设图像错误:', err);\n      error('获取预设图像失败: ' + err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 当性别选择变化时，重新获取图像\n  useEffect(() => {\n    if (isOpen) {\n      fetchPresetImages();\n    }\n  }, [selectedGender, isOpen]);\n\n  // 选择预设图像\n  const handleSelectImage = async (imagePath) => {\n    setSelectedImage(imagePath);\n    console.log('选择图像路径:', imagePath);\n    \n    try {\n      const response = await fetch('http://localhost:8000/api/use_preset_image', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ image_path: imagePath })\n      });\n      \n      if (!response.ok) {\n        throw new Error(`服务器返回错误: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      console.log('服务器响应:', data);\n      \n      if (data.success) {\n        updateConfig({ refImagePath: imagePath });\n        success('参考图像已更新');\n      } else {\n        throw new Error(data.error || '更新参考图像失败');\n      }\n    } catch (err) {\n      console.error('设置参考图像失败:', err);\n      error('设置参考图像失败: ' + err.message);\n    }\n  };\n\n  return (\n    <>\n      <button className=\"settings-toggle\" onClick={togglePanel}>\n        设置\n      </button>\n      \n      <div className={`settings-panel ${isOpen ? 'open' : ''}`}>\n        <div className=\"settings-header\">\n          <h2>设置</h2>\n          <button className=\"settings-close\" onClick={togglePanel}>×</button>\n        </div>\n        \n        <div className=\"settings-content\">\n          <div className=\"settings-section\">\n            <h3>基本设置</h3>\n            \n            <div className=\"settings-option\">\n              <label>启用EchoMimic</label>\n              <label className=\"toggle-switch\">\n                <input \n                  type=\"checkbox\" \n                  checked={config.useEchoMimic} \n                  onChange={handleEchoMimicToggle}\n                />\n                <span className=\"toggle-slider\"></span>\n              </label>\n            </div>\n            \n            <div className=\"settings-option\">\n              <label>语言</label>\n              <select value={config.language} onChange={handleLanguageChange}>\n                <option value=\"zh\">中文</option>\n                <option value=\"en\">英语</option>\n              </select>\n            </div>\n          </div>\n          \n          {config.useEchoMimic && (\n            <div className=\"settings-section\">\n              <h3>EchoMimic设置</h3>\n              \n              <div className=\"settings-option\">\n                <label>选择性别</label>\n                <select \n                  value={selectedGender}\n                  onChange={(e) => setSelectedGender(e.target.value)}\n                >\n                  <option value=\"woman\">女性</option>\n                  <option value=\"man\">男性</option>\n                </select>\n              </div>\n              \n              <div className=\"settings-option\">\n                <label>预设参考图像</label>\n                {isLoading ? (\n                  <div className=\"loading-spinner\"></div>\n                ) : (\n                  <div className=\"preset-images-grid\">\n                    {presetImages.map((image, index) => (\n                      <div \n                        key={index}\n                        className={`preset-image-item ${selectedImage === image.path ? 'selected' : ''}`}\n                        onClick={() => handleSelectImage(image.path)}\n                      >\n                        <img src={image.thumbnail ? `http://localhost:8000${image.thumbnail}` : `http://localhost:8000/static/preset_images/${selectedGender}/${index + 1}.png`} alt={`参考图像 ${index + 1}`} />\n                        <div className=\"preset-image-overlay\">\n                          <span>选择</span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SettingsPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}