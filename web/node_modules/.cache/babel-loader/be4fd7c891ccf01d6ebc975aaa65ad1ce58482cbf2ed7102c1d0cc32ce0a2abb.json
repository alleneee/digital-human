{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import'./EchoMimicPlayer.css';/**\n * EchoMimic视频播放组件\n * 负责显示和控制EchoMimic生成的视频\n */import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const EchoMimicPlayer=_ref=>{let{videoSrc,onEnded,onClose,autoPlay=true,width=512,height=512,className=''}=_ref;const videoRef=useRef(null);const[isPlaying,setIsPlaying]=useState(false);const[isLoaded,setIsLoaded]=useState(false);const[error,setError]=useState(null);// 当视频源变化时，重置状态\nuseEffect(()=>{if(videoSrc){setIsLoaded(false);setError(null);}},[videoSrc]);// 处理视频加载完成事件\nconst handleVideoLoaded=()=>{setIsLoaded(true);if(autoPlay){playVideo();}};// 处理视频播放结束事件\nconst handleVideoEnded=()=>{setIsPlaying(false);if(onEnded&&typeof onEnded==='function'){onEnded();}};// 处理播放错误\nconst handleError=e=>{console.error('视频播放错误:',e);setError('视频加载失败');};// 播放视频\nconst playVideo=()=>{if(videoRef.current){videoRef.current.play().then(()=>{setIsPlaying(true);}).catch(err=>{console.error('播放失败:',err);setError('视频播放失败');});}};// 暂停视频 - 保留供将来功能使用\n// 禁用eslint警告\n// eslint-disable-next-line no-unused-vars\nconst pauseVideo=()=>{if(videoRef.current){videoRef.current.pause();setIsPlaying(false);}};// 重新播放\nconst replayVideo=()=>{if(videoRef.current){videoRef.current.currentTime=0;playVideo();}};return/*#__PURE__*/_jsxs(\"div\",{className:`echomimic-player ${className}`,style:{width,height},children:[onClose&&/*#__PURE__*/_jsx(\"button\",{className:\"close-video-btn\",onClick:onClose,children:\"\\xD7\"}),videoSrc?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"video\",{ref:videoRef,className:\"echomimic-video\",src:videoSrc,width:width,height:height,onLoadedData:handleVideoLoaded,onEnded:handleVideoEnded,onError:handleError,playsInline:true}),!isLoaded&&!error&&/*#__PURE__*/_jsxs(\"div\",{className:\"loading-overlay\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading-text\",children:\"\\u52A0\\u8F7D\\u89C6\\u9891\\u4E2D...\"})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-overlay\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"retry-button\",onClick:()=>{setError(null);if(videoRef.current){videoRef.current.load();}},children:\"\\u91CD\\u8BD5\"})]}),isLoaded&&!isPlaying&&!error&&/*#__PURE__*/_jsx(\"div\",{className:\"controls-overlay\",children:/*#__PURE__*/_jsx(\"button\",{className:\"play-button\",onClick:replayVideo,children:/*#__PURE__*/_jsx(\"span\",{className:\"play-icon\",children:\"\\u25B6\"})})})]}):/*#__PURE__*/_jsx(\"div\",{className:\"placeholder\",children:/*#__PURE__*/_jsx(\"div\",{className:\"placeholder-text\",children:\"\\u89C6\\u9891\\u672A\\u52A0\\u8F7D\"})})]});};export default EchoMimicPlayer;","map":{"version":3,"names":["React","useEffect","useRef","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","EchoMimicPlayer","_ref","videoSrc","onEnded","onClose","autoPlay","width","height","className","videoRef","isPlaying","setIsPlaying","isLoaded","setIsLoaded","error","setError","handleVideoLoaded","playVideo","handleVideoEnded","handleError","e","console","current","play","then","catch","err","pauseVideo","pause","replayVideo","currentTime","style","children","onClick","ref","src","onLoadedData","onError","playsInline","load"],"sources":["/Users/niko/digital-human/frontend/src/components/EchoMimicPlayer/index.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './EchoMimicPlayer.css';\n\n/**\n * EchoMimic视频播放组件\n * 负责显示和控制EchoMimic生成的视频\n */\nconst EchoMimicPlayer = ({ \n  videoSrc, \n  onEnded, \n  onClose,\n  autoPlay = true,\n  width = 512,\n  height = 512,\n  className = ''\n}) => {\n  const videoRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n\n  // 当视频源变化时，重置状态\n  useEffect(() => {\n    if (videoSrc) {\n      setIsLoaded(false);\n      setError(null);\n    }\n  }, [videoSrc]);\n\n  // 处理视频加载完成事件\n  const handleVideoLoaded = () => {\n    setIsLoaded(true);\n    if (autoPlay) {\n      playVideo();\n    }\n  };\n\n  // 处理视频播放结束事件\n  const handleVideoEnded = () => {\n    setIsPlaying(false);\n    if (onEnded && typeof onEnded === 'function') {\n      onEnded();\n    }\n  };\n\n  // 处理播放错误\n  const handleError = (e) => {\n    console.error('视频播放错误:', e);\n    setError('视频加载失败');\n  };\n\n  // 播放视频\n  const playVideo = () => {\n    if (videoRef.current) {\n      videoRef.current.play()\n        .then(() => {\n          setIsPlaying(true);\n        })\n        .catch(err => {\n          console.error('播放失败:', err);\n          setError('视频播放失败');\n        });\n    }\n  };\n\n  // 暂停视频 - 保留供将来功能使用\n  // 禁用eslint警告\n  // eslint-disable-next-line no-unused-vars\n  const pauseVideo = () => {\n    if (videoRef.current) {\n      videoRef.current.pause();\n      setIsPlaying(false);\n    }\n  };\n\n  // 重新播放\n  const replayVideo = () => {\n    if (videoRef.current) {\n      videoRef.current.currentTime = 0;\n      playVideo();\n    }\n  };\n\n  return (\n    <div className={`echomimic-player ${className}`} style={{ width, height }}>\n      {onClose && (\n        <button className=\"close-video-btn\" onClick={onClose}>\n          &times;\n        </button>\n      )}\n      \n      {videoSrc ? (\n        <>\n          <video\n            ref={videoRef}\n            className=\"echomimic-video\"\n            src={videoSrc}\n            width={width}\n            height={height}\n            onLoadedData={handleVideoLoaded}\n            onEnded={handleVideoEnded}\n            onError={handleError}\n            playsInline\n          />\n          \n          {!isLoaded && !error && (\n            <div className=\"loading-overlay\">\n              <div className=\"loading-spinner\"></div>\n              <div className=\"loading-text\">加载视频中...</div>\n            </div>\n          )}\n          \n          {error && (\n            <div className=\"error-overlay\">\n              <div className=\"error-message\">{error}</div>\n              <button \n                className=\"retry-button\"\n                onClick={() => {\n                  setError(null);\n                  if (videoRef.current) {\n                    videoRef.current.load();\n                  }\n                }}\n              >\n                重试\n              </button>\n            </div>\n          )}\n          \n          {isLoaded && !isPlaying && !error && (\n            <div className=\"controls-overlay\">\n              <button className=\"play-button\" onClick={replayVideo}>\n                <span className=\"play-icon\">▶</span>\n              </button>\n            </div>\n          )}\n        </>\n      ) : (\n        <div className=\"placeholder\">\n          <div className=\"placeholder-text\">视频未加载</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EchoMimicPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}