{"ast":null,"code":"var _jsxFileName = \"/Users/niko/digital-human/frontend/src/components/EchoMimicPlayer/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './EchoMimicPlayer.css';\n\n/**\n * EchoMimic视频播放组件\n * 负责显示和控制EchoMimic生成的视频\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EchoMimicPlayer = ({\n  videoSrc,\n  onEnded,\n  onClose,\n  autoPlay = true,\n  width = 512,\n  height = 512,\n  className = ''\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n\n  // 当视频源变化时，重置状态\n  useEffect(() => {\n    if (videoSrc) {\n      setIsLoaded(false);\n      setError(null);\n    }\n  }, [videoSrc]);\n\n  // 处理视频加载完成事件\n  const handleVideoLoaded = () => {\n    setIsLoaded(true);\n    if (autoPlay) {\n      playVideo();\n    }\n  };\n\n  // 处理视频播放结束事件\n  const handleVideoEnded = () => {\n    setIsPlaying(false);\n    if (onEnded && typeof onEnded === 'function') {\n      onEnded();\n    }\n  };\n\n  // 处理播放错误\n  const handleError = e => {\n    console.error('视频播放错误:', e);\n    setError('视频加载失败');\n  };\n\n  // 播放视频\n  const playVideo = () => {\n    if (videoRef.current) {\n      videoRef.current.play().then(() => {\n        setIsPlaying(true);\n      }).catch(err => {\n        console.error('播放失败:', err);\n        setError('视频播放失败');\n      });\n    }\n  };\n\n  // 暂停视频\n  const pauseVideo = () => {\n    if (videoRef.current) {\n      videoRef.current.pause();\n      setIsPlaying(false);\n    }\n  };\n\n  // 重新播放\n  const replayVideo = () => {\n    if (videoRef.current) {\n      videoRef.current.currentTime = 0;\n      playVideo();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `echomimic-player ${className}`,\n    style: {\n      width,\n      height\n    },\n    children: [onClose && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close-video-btn\",\n      onClick: onClose,\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), videoSrc ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        className: \"echomimic-video\",\n        src: videoSrc,\n        width: width,\n        height: height,\n        onLoadedData: handleVideoLoaded,\n        onEnded: handleVideoEnded,\n        onError: handleError,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), !isLoaded && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-text\",\n          children: \"\\u52A0\\u8F7D\\u89C6\\u9891\\u4E2D...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"retry-button\",\n          onClick: () => {\n            setError(null);\n            if (videoRef.current) {\n              videoRef.current.load();\n            }\n          },\n          children: \"\\u91CD\\u8BD5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), isLoaded && !isPlaying && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play-button\",\n          onClick: replayVideo,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"play-icon\",\n            children: \"\\u25B6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"placeholder\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder-text\",\n        children: \"\\u89C6\\u9891\\u672A\\u52A0\\u8F7D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(EchoMimicPlayer, \"7aejleGBfnRPNuWiXVyfiW9ia+8=\");\n_c = EchoMimicPlayer;\nexport default EchoMimicPlayer;\nvar _c;\n$RefreshReg$(_c, \"EchoMimicPlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","EchoMimicPlayer","videoSrc","onEnded","onClose","autoPlay","width","height","className","_s","videoRef","isPlaying","setIsPlaying","isLoaded","setIsLoaded","error","setError","handleVideoLoaded","playVideo","handleVideoEnded","handleError","e","console","current","play","then","catch","err","pauseVideo","pause","replayVideo","currentTime","style","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","onLoadedData","onError","playsInline","load","_c","$RefreshReg$"],"sources":["/Users/niko/digital-human/frontend/src/components/EchoMimicPlayer/index.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './EchoMimicPlayer.css';\n\n/**\n * EchoMimic视频播放组件\n * 负责显示和控制EchoMimic生成的视频\n */\nconst EchoMimicPlayer = ({ \n  videoSrc, \n  onEnded, \n  onClose,\n  autoPlay = true,\n  width = 512,\n  height = 512,\n  className = ''\n}) => {\n  const videoRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n\n  // 当视频源变化时，重置状态\n  useEffect(() => {\n    if (videoSrc) {\n      setIsLoaded(false);\n      setError(null);\n    }\n  }, [videoSrc]);\n\n  // 处理视频加载完成事件\n  const handleVideoLoaded = () => {\n    setIsLoaded(true);\n    if (autoPlay) {\n      playVideo();\n    }\n  };\n\n  // 处理视频播放结束事件\n  const handleVideoEnded = () => {\n    setIsPlaying(false);\n    if (onEnded && typeof onEnded === 'function') {\n      onEnded();\n    }\n  };\n\n  // 处理播放错误\n  const handleError = (e) => {\n    console.error('视频播放错误:', e);\n    setError('视频加载失败');\n  };\n\n  // 播放视频\n  const playVideo = () => {\n    if (videoRef.current) {\n      videoRef.current.play()\n        .then(() => {\n          setIsPlaying(true);\n        })\n        .catch(err => {\n          console.error('播放失败:', err);\n          setError('视频播放失败');\n        });\n    }\n  };\n\n  // 暂停视频\n  const pauseVideo = () => {\n    if (videoRef.current) {\n      videoRef.current.pause();\n      setIsPlaying(false);\n    }\n  };\n\n  // 重新播放\n  const replayVideo = () => {\n    if (videoRef.current) {\n      videoRef.current.currentTime = 0;\n      playVideo();\n    }\n  };\n\n  return (\n    <div className={`echomimic-player ${className}`} style={{ width, height }}>\n      {onClose && (\n        <button className=\"close-video-btn\" onClick={onClose}>\n          &times;\n        </button>\n      )}\n      \n      {videoSrc ? (\n        <>\n          <video\n            ref={videoRef}\n            className=\"echomimic-video\"\n            src={videoSrc}\n            width={width}\n            height={height}\n            onLoadedData={handleVideoLoaded}\n            onEnded={handleVideoEnded}\n            onError={handleError}\n            playsInline\n          />\n          \n          {!isLoaded && !error && (\n            <div className=\"loading-overlay\">\n              <div className=\"loading-spinner\"></div>\n              <div className=\"loading-text\">加载视频中...</div>\n            </div>\n          )}\n          \n          {error && (\n            <div className=\"error-overlay\">\n              <div className=\"error-message\">{error}</div>\n              <button \n                className=\"retry-button\"\n                onClick={() => {\n                  setError(null);\n                  if (videoRef.current) {\n                    videoRef.current.load();\n                  }\n                }}\n              >\n                重试\n              </button>\n            </div>\n          )}\n          \n          {isLoaded && !isPlaying && !error && (\n            <div className=\"controls-overlay\">\n              <button className=\"play-button\" onClick={replayVideo}>\n                <span className=\"play-icon\">▶</span>\n              </button>\n            </div>\n          )}\n        </>\n      ) : (\n        <div className=\"placeholder\">\n          <div className=\"placeholder-text\">视频未加载</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EchoMimicPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}