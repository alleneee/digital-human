{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/niko/node_modules/.pnpm/@deepgram+sdk@3.11.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@deepgram/sdk/src/lib/types/DeepgramClientOptions.ts"],"sourcesContent":["import { Fetch, FetchOptions } from \"./Fetch\";\n\nexport type IKeyFactory = () => string;\nexport type IFetch = typeof fetch;\nexport type IWebSocket = typeof WebSocket;\n\ninterface TransportFetchOptions extends TransportOptions, FetchOptions {}\ninterface TransportWebSocketOptions extends TransportOptions {\n  _nodeOnlyHeaders?: { [index: string]: any };\n}\n\ntype TransportUrl = string;\n\ninterface TransportOptions {\n  url?: TransportUrl;\n  proxy?: {\n    url: TransportUrl;\n  };\n}\n\ninterface ITransport<C, O> {\n  client?: C;\n  options?: O;\n}\n\nexport type DefaultNamespaceOptions = {\n  key: string;\n  fetch: {\n    options: { url: TransportUrl };\n  };\n  websocket: {\n    options: { url: TransportUrl };\n  };\n} & NamespaceOptions;\n\nexport interface NamespaceOptions {\n  key?: string;\n  fetch?: ITransport<IFetch, TransportFetchOptions>;\n  websocket?: ITransport<IWebSocket, TransportWebSocketOptions>;\n}\n\nexport type DefaultClientOptions = {\n  global: Partial<DefaultNamespaceOptions>;\n} & DeepgramClientOptions;\n\n/**\n * Configures the options for a Deepgram client.\n *\n * The `DeepgramClientOptions` interface defines the configuration options for a Deepgram client. It includes options for various namespaces, such as `global`, `listen`, `manage`, `onprem`, `read`, and `speak`. Each namespace has its own options for configuring the transport, including the URL, proxy, and options for the fetch and WebSocket clients.\n *\n * The `global` namespace is used to configure options that apply globally to the Deepgram client. The other namespaces are used to configure options specific to different Deepgram API endpoints.\n * Support introductory formats:\n * - fetch: FetchOptions;\n * - _experimentalCustomFetch?: Fetch;\n * - restProxy?: {\n *     url: null | string;\n *   };\n */\nexport interface DeepgramClientOptions {\n  key?: string | IKeyFactory;\n  global?: NamespaceOptions & { url?: string; headers?: { [index: string]: any } };\n  listen?: NamespaceOptions;\n  manage?: NamespaceOptions;\n  onprem?: NamespaceOptions;\n  read?: NamespaceOptions;\n  speak?: NamespaceOptions;\n  agent?: NamespaceOptions;\n\n  /**\n   * @deprecated as of 3.4, use a namespace like `global` instead\n   */\n  fetch?: FetchOptions;\n\n  /**\n   * @deprecated as of 3.4, use a namespace like `global` instead\n   */\n  _experimentalCustomFetch?: Fetch;\n\n  /**\n   * @deprecated as of 3.4, use a namespace like `global` instead\n   */\n  restProxy?: {\n    url: null | string;\n  };\n}\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}