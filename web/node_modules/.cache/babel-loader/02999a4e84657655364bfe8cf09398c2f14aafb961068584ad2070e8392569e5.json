{"ast":null,"code":"import { Headers as CrossFetchHeaders } from \"cross-fetch\";\nimport merge from \"deepmerge\";\nimport { BROWSER_AGENT, BUN_VERSION, NODE_VERSION } from \"./constants\";\nexport function stripTrailingSlash(url) {\n  return url.replace(/\\/$/, \"\");\n}\nexport const isBrowser = () => BROWSER_AGENT !== \"unknown\";\nexport const isNode = () => NODE_VERSION !== \"unknown\";\nexport const isBun = () => BUN_VERSION !== \"unknown\";\nexport function applyDefaults(options = {}, subordinate = {}) {\n  return merge(subordinate, options);\n}\nexport function appendSearchParams(searchParams, options) {\n  Object.keys(options).forEach(i => {\n    if (Array.isArray(options[i])) {\n      const arrayParams = options[i];\n      arrayParams.forEach(param => {\n        searchParams.append(i, String(param));\n      });\n    } else {\n      searchParams.append(i, String(options[i]));\n    }\n  });\n}\nexport const resolveHeadersConstructor = () => {\n  if (typeof Headers === \"undefined\") {\n    return CrossFetchHeaders;\n  }\n  return Headers;\n};\nexport const isUrlSource = providedSource => {\n  if (providedSource.url) return true;\n  return false;\n};\nexport const isTextSource = providedSource => {\n  if (providedSource.text) return true;\n  return false;\n};\nexport const isFileSource = providedSource => {\n  if (isReadStreamSource(providedSource) || isBufferSource(providedSource)) return true;\n  return false;\n};\nconst isBufferSource = providedSource => {\n  if (providedSource) return true;\n  return false;\n};\nconst isReadStreamSource = providedSource => {\n  if (providedSource) return true;\n  return false;\n};\nexport class CallbackUrl extends URL {\n  constructor() {\n    super(...arguments);\n    this.callbackUrl = true;\n  }\n}\nexport const convertProtocolToWs = url => {\n  const convert = string => string.toLowerCase().replace(/^http/, \"ws\");\n  return convert(url);\n};\nexport const buildRequestUrl = (endpoint, baseUrl, transcriptionOptions) => {\n  const url = new URL(endpoint, baseUrl);\n  appendSearchParams(url.searchParams, transcriptionOptions);\n  return url;\n};\nexport function isLiveSchema(arg) {\n  return arg && typeof arg.interim_results !== \"undefined\";\n}\nexport function isDeepgramClientOptions(arg) {\n  return arg && typeof arg.global !== \"undefined\";\n}\nexport const convertLegacyOptions = optionsArg => {\n  var _a, _b, _c, _d, _e, _f;\n  const newOptions = {};\n  if (optionsArg._experimentalCustomFetch) {\n    newOptions.global = {\n      fetch: {\n        client: optionsArg._experimentalCustomFetch\n      }\n    };\n  }\n  optionsArg = merge(optionsArg, newOptions);\n  if ((_a = optionsArg.restProxy) === null || _a === void 0 ? void 0 : _a.url) {\n    newOptions.global = {\n      fetch: {\n        options: {\n          proxy: {\n            url: (_b = optionsArg.restProxy) === null || _b === void 0 ? void 0 : _b.url\n          }\n        }\n      }\n    };\n  }\n  optionsArg = merge(optionsArg, newOptions);\n  if ((_c = optionsArg.global) === null || _c === void 0 ? void 0 : _c.url) {\n    newOptions.global = {\n      fetch: {\n        options: {\n          url: optionsArg.global.url\n        }\n      },\n      websocket: {\n        options: {\n          url: optionsArg.global.url\n        }\n      }\n    };\n  }\n  optionsArg = merge(optionsArg, newOptions);\n  if ((_d = optionsArg.global) === null || _d === void 0 ? void 0 : _d.headers) {\n    newOptions.global = {\n      fetch: {\n        options: {\n          headers: (_e = optionsArg.global) === null || _e === void 0 ? void 0 : _e.headers\n        }\n      },\n      websocket: {\n        options: {\n          _nodeOnlyHeaders: (_f = optionsArg.global) === null || _f === void 0 ? void 0 : _f.headers\n        }\n      }\n    };\n  }\n  optionsArg = merge(optionsArg, newOptions);\n  return optionsArg;\n};","map":{"version":3,"names":["Headers","CrossFetchHeaders","merge","BROWSER_AGENT","BUN_VERSION","NODE_VERSION","stripTrailingSlash","url","replace","isBrowser","isNode","isBun","applyDefaults","options","subordinate","appendSearchParams","searchParams","Object","keys","forEach","i","Array","isArray","arrayParams","param","append","String","resolveHeadersConstructor","isUrlSource","providedSource","isTextSource","text","isFileSource","isReadStreamSource","isBufferSource","CallbackUrl","URL","constructor","callbackUrl","convertProtocolToWs","convert","string","toLowerCase","buildRequestUrl","endpoint","baseUrl","transcriptionOptions","isLiveSchema","arg","interim_results","isDeepgramClientOptions","global","convertLegacyOptions","optionsArg","newOptions","_experimentalCustomFetch","fetch","client","_a","restProxy","proxy","_b","_c","websocket","_d","headers","_e","_nodeOnlyHeaders","_f"],"sources":["/Users/niko/node_modules/.pnpm/@deepgram+sdk@3.11.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@deepgram/sdk/src/lib/helpers.ts"],"sourcesContent":["import {\n  DeepgramClientOptions,\n  FileSource,\n  PrerecordedSource,\n  UrlSource,\n  TextSource,\n  AnalyzeSource,\n  LiveSchema,\n  TranscriptionSchema,\n} from \"./types\";\nimport { Headers as CrossFetchHeaders } from \"cross-fetch\";\nimport { Readable } from \"stream\";\nimport merge from \"deepmerge\";\nimport { BROWSER_AGENT, BUN_VERSION, NODE_VERSION } from \"./constants\";\n\nexport function stripTrailingSlash(url: string): string {\n  return url.replace(/\\/$/, \"\");\n}\n\nexport const isBrowser = () => BROWSER_AGENT !== \"unknown\";\n\nexport const isNode = () => NODE_VERSION !== \"unknown\";\n\nexport const isBun = () => BUN_VERSION !== \"unknown\";\n\nexport function applyDefaults<O, S>(options: Partial<O> = {}, subordinate: Partial<S> = {}): S {\n  return merge(subordinate, options);\n}\n\nexport function appendSearchParams(\n  searchParams: URLSearchParams,\n  options: Record<string, unknown>\n): void {\n  Object.keys(options).forEach((i) => {\n    if (Array.isArray(options[i])) {\n      const arrayParams = options[i] as Array<any>;\n      arrayParams.forEach((param) => {\n        searchParams.append(i, String(param));\n      });\n    } else {\n      searchParams.append(i, String(options[i]));\n    }\n  });\n}\n\nexport const resolveHeadersConstructor = () => {\n  if (typeof Headers === \"undefined\") {\n    return CrossFetchHeaders;\n  }\n\n  return Headers;\n};\n\nexport const isUrlSource = (\n  providedSource: PrerecordedSource | AnalyzeSource\n): providedSource is UrlSource => {\n  if ((providedSource as UrlSource).url) return true;\n\n  return false;\n};\n\nexport const isTextSource = (\n  providedSource: PrerecordedSource | AnalyzeSource\n): providedSource is TextSource => {\n  if ((providedSource as TextSource).text) return true;\n\n  return false;\n};\n\nexport const isFileSource = (providedSource: PrerecordedSource): providedSource is FileSource => {\n  if (isReadStreamSource(providedSource) || isBufferSource(providedSource)) return true;\n\n  return false;\n};\n\nconst isBufferSource = (providedSource: PrerecordedSource): providedSource is Buffer => {\n  if (providedSource as Buffer) return true;\n\n  return false;\n};\n\nconst isReadStreamSource = (providedSource: PrerecordedSource): providedSource is Readable => {\n  if (providedSource as Readable) return true;\n\n  return false;\n};\n\nexport class CallbackUrl extends URL {\n  public callbackUrl = true;\n}\n\nexport const convertProtocolToWs = (url: string) => {\n  const convert = (string: string) => string.toLowerCase().replace(/^http/, \"ws\");\n\n  return convert(url);\n};\n\nexport const buildRequestUrl = (\n  endpoint: string,\n  baseUrl: string | URL,\n  transcriptionOptions: LiveSchema | TranscriptionSchema\n): URL => {\n  const url = new URL(endpoint, baseUrl);\n  appendSearchParams(url.searchParams, transcriptionOptions);\n\n  return url;\n};\n\nexport function isLiveSchema(arg: any): arg is LiveSchema {\n  return arg && typeof arg.interim_results !== \"undefined\";\n}\n\nexport function isDeepgramClientOptions(arg: any): arg is DeepgramClientOptions {\n  return arg && typeof arg.global !== \"undefined\";\n}\n\nexport const convertLegacyOptions = (optionsArg: DeepgramClientOptions): DeepgramClientOptions => {\n  const newOptions: DeepgramClientOptions = {};\n\n  if (optionsArg._experimentalCustomFetch) {\n    newOptions.global = {\n      fetch: {\n        client: optionsArg._experimentalCustomFetch,\n      },\n    };\n  }\n\n  optionsArg = merge(optionsArg, newOptions);\n\n  if (optionsArg.restProxy?.url) {\n    newOptions.global = {\n      fetch: {\n        options: {\n          proxy: {\n            url: optionsArg.restProxy?.url,\n          },\n        },\n      },\n    };\n  }\n\n  optionsArg = merge(optionsArg, newOptions);\n\n  if (optionsArg.global?.url) {\n    newOptions.global = {\n      fetch: {\n        options: {\n          url: optionsArg.global.url,\n        },\n      },\n      websocket: {\n        options: {\n          url: optionsArg.global.url,\n        },\n      },\n    };\n  }\n\n  optionsArg = merge(optionsArg, newOptions);\n\n  if (optionsArg.global?.headers) {\n    newOptions.global = {\n      fetch: {\n        options: {\n          headers: optionsArg.global?.headers,\n        },\n      },\n      websocket: {\n        options: {\n          _nodeOnlyHeaders: optionsArg.global?.headers,\n        },\n      },\n    };\n  }\n\n  optionsArg = merge(optionsArg, newOptions);\n\n  return optionsArg;\n};\n"],"mappings":"AAUA,SAASA,OAAO,IAAIC,iBAAiB,QAAQ,aAAa;AAE1D,OAAOC,KAAK,MAAM,WAAW;AAC7B,SAASC,aAAa,EAAEC,WAAW,EAAEC,YAAY,QAAQ,aAAa;AAEtE,OAAM,SAAUC,kBAAkBA,CAACC,GAAW;EAC5C,OAAOA,GAAG,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;AAC/B;AAEA,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAMN,aAAa,KAAK,SAAS;AAE1D,OAAO,MAAMO,MAAM,GAAGA,CAAA,KAAML,YAAY,KAAK,SAAS;AAEtD,OAAO,MAAMM,KAAK,GAAGA,CAAA,KAAMP,WAAW,KAAK,SAAS;AAEpD,OAAM,SAAUQ,aAAaA,CAAOC,OAAA,GAAsB,EAAE,EAAEC,WAAA,GAA0B,EAAE;EACxF,OAAOZ,KAAK,CAACY,WAAW,EAAED,OAAO,CAAC;AACpC;AAEA,OAAM,SAAUE,kBAAkBA,CAChCC,YAA6B,EAC7BH,OAAgC;EAEhCI,MAAM,CAACC,IAAI,CAACL,OAAO,CAAC,CAACM,OAAO,CAAEC,CAAC,IAAI;IACjC,IAAIC,KAAK,CAACC,OAAO,CAACT,OAAO,CAACO,CAAC,CAAC,CAAC,EAAE;MAC7B,MAAMG,WAAW,GAAGV,OAAO,CAACO,CAAC,CAAe;MAC5CG,WAAW,CAACJ,OAAO,CAAEK,KAAK,IAAI;QAC5BR,YAAY,CAACS,MAAM,CAACL,CAAC,EAAEM,MAAM,CAACF,KAAK,CAAC,CAAC;MACvC,CAAC,CAAC;KACH,MAAM;MACLR,YAAY,CAACS,MAAM,CAACL,CAAC,EAAEM,MAAM,CAACb,OAAO,CAACO,CAAC,CAAC,CAAC,CAAC;;EAE9C,CAAC,CAAC;AACJ;AAEA,OAAO,MAAMO,yBAAyB,GAAGA,CAAA,KAAK;EAC5C,IAAI,OAAO3B,OAAO,KAAK,WAAW,EAAE;IAClC,OAAOC,iBAAiB;;EAG1B,OAAOD,OAAO;AAChB,CAAC;AAED,OAAO,MAAM4B,WAAW,GACtBC,cAAiD,IAClB;EAC/B,IAAKA,cAA4B,CAACtB,GAAG,EAAE,OAAO,IAAI;EAElD,OAAO,KAAK;AACd,CAAC;AAED,OAAO,MAAMuB,YAAY,GACvBD,cAAiD,IACjB;EAChC,IAAKA,cAA6B,CAACE,IAAI,EAAE,OAAO,IAAI;EAEpD,OAAO,KAAK;AACd,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIH,cAAiC,IAAkC;EAC9F,IAAII,kBAAkB,CAACJ,cAAc,CAAC,IAAIK,cAAc,CAACL,cAAc,CAAC,EAAE,OAAO,IAAI;EAErF,OAAO,KAAK;AACd,CAAC;AAED,MAAMK,cAAc,GAAIL,cAAiC,IAA8B;EACrF,IAAIA,cAAwB,EAAE,OAAO,IAAI;EAEzC,OAAO,KAAK;AACd,CAAC;AAED,MAAMI,kBAAkB,GAAIJ,cAAiC,IAAgC;EAC3F,IAAIA,cAA0B,EAAE,OAAO,IAAI;EAE3C,OAAO,KAAK;AACd,CAAC;AAED,OAAM,MAAOM,WAAY,SAAQC,GAAG;EAApCC,YAAA;;IACS,KAAAC,WAAW,GAAG,IAAI;EAC3B;;AAEA,OAAO,MAAMC,mBAAmB,GAAIhC,GAAW,IAAI;EACjD,MAAMiC,OAAO,GAAIC,MAAc,IAAKA,MAAM,CAACC,WAAW,EAAE,CAAClC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;EAE/E,OAAOgC,OAAO,CAACjC,GAAG,CAAC;AACrB,CAAC;AAED,OAAO,MAAMoC,eAAe,GAAGA,CAC7BC,QAAgB,EAChBC,OAAqB,EACrBC,oBAAsD,KAC/C;EACP,MAAMvC,GAAG,GAAG,IAAI6B,GAAG,CAACQ,QAAQ,EAAEC,OAAO,CAAC;EACtC9B,kBAAkB,CAACR,GAAG,CAACS,YAAY,EAAE8B,oBAAoB,CAAC;EAE1D,OAAOvC,GAAG;AACZ,CAAC;AAED,OAAM,SAAUwC,YAAYA,CAACC,GAAQ;EACnC,OAAOA,GAAG,IAAI,OAAOA,GAAG,CAACC,eAAe,KAAK,WAAW;AAC1D;AAEA,OAAM,SAAUC,uBAAuBA,CAACF,GAAQ;EAC9C,OAAOA,GAAG,IAAI,OAAOA,GAAG,CAACG,MAAM,KAAK,WAAW;AACjD;AAEA,OAAO,MAAMC,oBAAoB,GAAIC,UAAiC,IAA2B;;EAC/F,MAAMC,UAAU,GAA0B,EAAE;EAE5C,IAAID,UAAU,CAACE,wBAAwB,EAAE;IACvCD,UAAU,CAACH,MAAM,GAAG;MAClBK,KAAK,EAAE;QACLC,MAAM,EAAEJ,UAAU,CAACE;;KAEtB;;EAGHF,UAAU,GAAGnD,KAAK,CAACmD,UAAU,EAAEC,UAAU,CAAC;EAE1C,IAAI,CAAAI,EAAA,GAAAL,UAAU,CAACM,SAAS,cAAAD,EAAA,uBAAAA,EAAA,CAAEnD,GAAG,EAAE;IAC7B+C,UAAU,CAACH,MAAM,GAAG;MAClBK,KAAK,EAAE;QACL3C,OAAO,EAAE;UACP+C,KAAK,EAAE;YACLrD,GAAG,EAAE,CAAAsD,EAAA,GAAAR,UAAU,CAACM,SAAS,cAAAE,EAAA,uBAAAA,EAAA,CAAEtD;;;;KAIlC;;EAGH8C,UAAU,GAAGnD,KAAK,CAACmD,UAAU,EAAEC,UAAU,CAAC;EAE1C,IAAI,CAAAQ,EAAA,GAAAT,UAAU,CAACF,MAAM,cAAAW,EAAA,uBAAAA,EAAA,CAAEvD,GAAG,EAAE;IAC1B+C,UAAU,CAACH,MAAM,GAAG;MAClBK,KAAK,EAAE;QACL3C,OAAO,EAAE;UACPN,GAAG,EAAE8C,UAAU,CAACF,MAAM,CAAC5C;;OAE1B;MACDwD,SAAS,EAAE;QACTlD,OAAO,EAAE;UACPN,GAAG,EAAE8C,UAAU,CAACF,MAAM,CAAC5C;;;KAG5B;;EAGH8C,UAAU,GAAGnD,KAAK,CAACmD,UAAU,EAAEC,UAAU,CAAC;EAE1C,IAAI,CAAAU,EAAA,GAAAX,UAAU,CAACF,MAAM,cAAAa,EAAA,uBAAAA,EAAA,CAAEC,OAAO,EAAE;IAC9BX,UAAU,CAACH,MAAM,GAAG;MAClBK,KAAK,EAAE;QACL3C,OAAO,EAAE;UACPoD,OAAO,EAAE,CAAAC,EAAA,GAAAb,UAAU,CAACF,MAAM,cAAAe,EAAA,uBAAAA,EAAA,CAAED;;OAE/B;MACDF,SAAS,EAAE;QACTlD,OAAO,EAAE;UACPsD,gBAAgB,EAAE,CAAAC,EAAA,GAAAf,UAAU,CAACF,MAAM,cAAAiB,EAAA,uBAAAA,EAAA,CAAEH;;;KAG1C;;EAGHZ,UAAU,GAAGnD,KAAK,CAACmD,UAAU,EAAEC,UAAU,CAAC;EAE1C,OAAOD,UAAU;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}