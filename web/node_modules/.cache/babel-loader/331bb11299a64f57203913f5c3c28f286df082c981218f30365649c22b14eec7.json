{"ast":null,"code":"/**\n * Enumeration of events related to live text-to-speech synthesis.\n *\n * - `Open`: Built-in socket event for when the connection is opened.\n * - `Close`: Built-in socket event for when the connection is closed.\n * - `Error`: Built-in socket event for when an error occurs.\n * - `Metadata`: Event for when metadata is received.\n * - `Flushed`: Event for when the server has flushed the buffer.\n * - `Warning`: Event for when a warning is received.\n * - `Unhandled`: Catch-all event for any other message event.\n */\nexport var LiveTTSEvents;\n(function (LiveTTSEvents) {\n  /**\n   * Built in socket events.\n   */\n  LiveTTSEvents[\"Open\"] = \"Open\";\n  LiveTTSEvents[\"Close\"] = \"Close\";\n  LiveTTSEvents[\"Error\"] = \"Error\";\n  /**\n   * Message { type: string }\n   */\n  LiveTTSEvents[\"Metadata\"] = \"Metadata\";\n  LiveTTSEvents[\"Flushed\"] = \"Flushed\";\n  LiveTTSEvents[\"Warning\"] = \"Warning\";\n  /**\n   * Audio data event.\n   */\n  LiveTTSEvents[\"Audio\"] = \"Audio\";\n  /**\n   * Catch all for any other message event\n   */\n  LiveTTSEvents[\"Unhandled\"] = \"Unhandled\";\n})(LiveTTSEvents || (LiveTTSEvents = {}));","map":{"version":3,"names":["LiveTTSEvents"],"sources":["/Users/niko/node_modules/.pnpm/@deepgram+sdk@3.11.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@deepgram/sdk/src/lib/enums/LiveTTSEvents.ts"],"sourcesContent":["/**\n * Enumeration of events related to live text-to-speech synthesis.\n *\n * - `Open`: Built-in socket event for when the connection is opened.\n * - `Close`: Built-in socket event for when the connection is closed.\n * - `Error`: Built-in socket event for when an error occurs.\n * - `Metadata`: Event for when metadata is received.\n * - `Flushed`: Event for when the server has flushed the buffer.\n * - `Warning`: Event for when a warning is received.\n * - `Unhandled`: Catch-all event for any other message event.\n */\nexport enum LiveTTSEvents {\n  /**\n   * Built in socket events.\n   */\n  Open = \"Open\",\n  Close = \"Close\",\n  Error = \"Error\",\n\n  /**\n   * Message { type: string }\n   */\n  Metadata = \"Metadata\",\n  Flushed = \"Flushed\",\n  Warning = \"Warning\",\n\n  /**\n   * Audio data event.\n   */\n  Audio = \"Audio\",\n\n  /**\n   * Catch all for any other message event\n   */\n  Unhandled = \"Unhandled\",\n}\n"],"mappings":"AAAA;;;;;;;;;;;AAWA,WAAYA,aAwBX;AAxBD,WAAYA,aAAa;EACvB;;;EAGAA,aAAA,iBAAa;EACbA,aAAA,mBAAe;EACfA,aAAA,mBAAe;EAEf;;;EAGAA,aAAA,yBAAqB;EACrBA,aAAA,uBAAmB;EACnBA,aAAA,uBAAmB;EAEnB;;;EAGAA,aAAA,mBAAe;EAEf;;;EAGAA,aAAA,2BAAuB;AACzB,CAAC,EAxBWA,aAAa,KAAbA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}