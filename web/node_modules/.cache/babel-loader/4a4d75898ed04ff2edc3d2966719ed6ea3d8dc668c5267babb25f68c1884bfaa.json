{"ast":null,"code":"var _jsxFileName = \"/Users/niko/digital-human/frontend/src/components/ChatSection/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ChatSection.css';\nimport { useWebSocket } from '../../contexts/WebSocketContext';\nimport { useNotification } from '../../contexts/NotificationContext';\nimport { useConfig } from '../../contexts/ConfigContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatSection = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [isGeneratingVideo, setIsGeneratingVideo] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const {\n    sendMessage,\n    sendAudioData,\n    isConnected,\n    setLoading\n  } = useWebSocket();\n  const {\n    error,\n    success\n  } = useNotification();\n  const {\n    config\n  } = useConfig();\n\n  // 媒体录制相关的状态\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioChunks, setAudioChunks] = useState([]);\n\n  // 音频配置\n  const audioConfig = {\n    sampleRate: 16000,\n    channels: 1\n  };\n\n  // 监听服务器消息\n  useEffect(() => {\n    const handleServerMessage = event => {\n      const message = event.detail;\n      console.log('ChatSection收到服务器消息:', message);\n\n      // 处理聊天消息\n      if (message.type === 'response') {\n        // 添加助手回复\n        if (message.text) {\n          addMessage('assistant', message.text);\n        }\n\n        // 添加状态消息\n        if (message.status && message.message) {\n          addStatusMessage(message.message);\n        }\n\n        // 处理参考图像\n        if (message.refImagePath) {\n          addMessage('system', `参考图像: ${config.refImagePath}`);\n        }\n      }\n      // 处理错误消息\n      else if (message.type === 'error') {\n        error(message.message || '出现错误，请重试');\n        addStatusMessage('错误: ' + (message.message || '未知错误'));\n      }\n    };\n    window.addEventListener('server-message', handleServerMessage);\n    return () => {\n      window.removeEventListener('server-message', handleServerMessage);\n    };\n  }, []);\n\n  // 初始化媒体录制\n  const initMediaRecorder = async () => {\n    try {\n      console.log('初始化媒体录制器');\n\n      // 请求音频权限\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n\n      // 设置音频处理\n      const options = {\n        mimeType: 'audio/webm'\n      };\n      const recorder = new MediaRecorder(stream, options);\n\n      // 收集音频数据\n      recorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          setAudioChunks(prev => [...prev, event.data]);\n        }\n      };\n\n      // 处理录制停止\n      recorder.onstop = async () => {\n        if (audioChunks.length === 0) {\n          console.warn('没有收集到音频数据');\n          return;\n        }\n        try {\n          // 合并音频块\n          const audioBlob = new Blob(audioChunks, {\n            type: 'audio/webm'\n          });\n\n          // 发送音频数据到服务器\n          console.log('发送音频数据, 大小:', audioBlob.size);\n          const result = sendAudioData(audioBlob, {\n            language: config.language,\n            voiceName: config.voiceName,\n            useEchoMimic: config.useEchoMimic\n          });\n          if (result) {\n            // 添加用户消息 (使用\"录音中...\"作为占位符)\n            addMessage('user', '🎤 语音输入');\n\n            // 重置音频块\n            setAudioChunks([]);\n\n            // 设置加载状态\n            setLoading(true, '处理中...');\n          }\n        } catch (err) {\n          console.error('处理录音失败:', err);\n          error('处理录音失败');\n        }\n      };\n\n      // 保存录制器实例\n      setMediaRecorder(recorder);\n      success('麦克风初始化成功');\n    } catch (err) {\n      console.error('初始化媒体录制失败:', err);\n      error('无法访问麦克风，请确保已授予权限');\n    }\n  };\n\n  // 组件挂载时初始化媒体录制\n  useEffect(() => {\n    // 自动初始化媒体录制器\n    if (!mediaRecorder) {\n      initMediaRecorder();\n    }\n\n    // 组件卸载时清理\n    return () => {\n      if (mediaRecorder && mediaRecorder.state !== 'inactive') {\n        mediaRecorder.stop();\n      }\n    };\n  }, []);\n\n  // 添加消息到聊天\n  const addMessage = (role, content) => {\n    setMessages(prev => [...prev, {\n      id: Date.now(),\n      role,\n      content,\n      timestamp: new Date().toLocaleTimeString()\n    }]);\n  };\n\n  // 添加状态消息\n  const addStatusMessage = content => {\n    setMessages(prev => [...prev, {\n      id: Date.now(),\n      role: 'status',\n      content,\n      timestamp: new Date().toLocaleTimeString()\n    }]);\n  };\n\n  // 自动滚动到最新消息\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n\n  // 处理输入变化\n  const handleInputChange = e => {\n    setInputText(e.target.value);\n  };\n\n  // 开始录音\n  const startRecording = () => {\n    if (!mediaRecorder) {\n      initMediaRecorder().then(() => {\n        if (mediaRecorder) {\n          mediaRecorder.start();\n          setIsRecording(true);\n        }\n      });\n    } else {\n      mediaRecorder.start();\n      setIsRecording(true);\n    }\n  };\n\n  // 停止录音\n  const stopRecording = () => {\n    if (mediaRecorder && mediaRecorder.state !== 'inactive') {\n      mediaRecorder.stop();\n    }\n    setIsRecording(false);\n  };\n\n  // 发送文本消息\n  const sendTextMessage = () => {\n    if (!inputText.trim()) return;\n\n    // 如果未连接，显示错误\n    if (!isConnected) {\n      error('未连接到服务器，请等待连接恢复');\n      return;\n    }\n\n    // 将消息添加到聊天\n    addMessage('user', inputText);\n\n    // 发送消息到服务器\n    const result = sendMessage({\n      type: 'message',\n      text: inputText,\n      language: config.language,\n      voiceName: config.voiceName,\n      useEchoMimic: config.useEchoMimic\n    });\n\n    // 如果成功发送，清空输入框并设置加载状态\n    if (result) {\n      setInputText('');\n      setLoading(true, '思考中...');\n    }\n  };\n\n  // 监听回车键\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendTextMessage();\n    }\n  };\n\n  // 渲染消息\n  const renderMessages = () => {\n    return messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.role}`,\n      children: [message.role === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar user-avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 37\n      }, this), message.role === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar assistant-avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-robot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 83\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-text\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time\",\n          children: message.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, message.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u804A\\u5929\\u7A97\\u53E3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `status-dot ${isConnected ? 'connected' : 'disconnected'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-text\",\n          children: isConnected ? '已连接' : '未连接'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-comment-dots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u4E0E\\u6570\\u5B57\\u4EBA\\u52A9\\u624B\\u5F00\\u59CB\\u5BF9\\u8BDD\\u5427\\uFF01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tip\",\n          children: \"\\u4F60\\u53EF\\u4EE5\\u8F93\\u5165\\u6587\\u5B57\\uFF0C\\u6216\\u70B9\\u51FB\\u9EA6\\u514B\\u98CE\\u6309\\u94AE\\u8FDB\\u884C\\u8BED\\u97F3\\u8F93\\u5165\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this) : renderMessages(), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: inputRef,\n        value: inputText,\n        onChange: handleInputChange,\n        onKeyPress: handleKeyPress,\n        placeholder: \"\\u8F93\\u5165\\u6D88\\u606F...\",\n        disabled: !isConnected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `voice-btn ${isRecording ? 'recording' : ''}`,\n          onClick: isRecording ? stopRecording : startRecording,\n          disabled: !isConnected,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fas ${isRecording ? 'fa-stop' : 'fa-microphone'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-btn\",\n          onClick: sendTextMessage,\n          disabled: !inputText.trim() || !isConnected,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-paper-plane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatSection, \"Zb6PqNGQCEgRj8ZF0YUHQCVRvtE=\", false, function () {\n  return [useWebSocket, useNotification, useConfig];\n});\n_c = ChatSection;\nexport default ChatSection;\nvar _c;\n$RefreshReg$(_c, \"ChatSection\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useWebSocket","useNotification","useConfig","jsxDEV","_jsxDEV","ChatSection","_s","messages","setMessages","inputText","setInputText","isRecording","setIsRecording","isGeneratingVideo","setIsGeneratingVideo","messagesEndRef","inputRef","sendMessage","sendAudioData","isConnected","setLoading","error","success","config","mediaRecorder","setMediaRecorder","audioChunks","setAudioChunks","audioConfig","sampleRate","channels","handleServerMessage","event","message","detail","console","log","type","text","addMessage","status","addStatusMessage","refImagePath","window","addEventListener","removeEventListener","initMediaRecorder","stream","navigator","mediaDevices","getUserMedia","audio","options","mimeType","recorder","MediaRecorder","ondataavailable","data","size","prev","onstop","length","warn","audioBlob","Blob","result","language","voiceName","useEchoMimic","err","state","stop","role","content","id","Date","now","timestamp","toLocaleTimeString","current","scrollIntoView","behavior","handleInputChange","e","target","value","startRecording","then","start","stopRecording","sendTextMessage","trim","handleKeyPress","key","shiftKey","preventDefault","renderMessages","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","onKeyPress","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/niko/digital-human/frontend/src/components/ChatSection/index.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './ChatSection.css';\nimport { useWebSocket } from '../../contexts/WebSocketContext';\nimport { useNotification } from '../../contexts/NotificationContext';\nimport { useConfig } from '../../contexts/ConfigContext';\n\nconst ChatSection = () => {\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [isGeneratingVideo, setIsGeneratingVideo] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const { sendMessage, sendAudioData, isConnected, setLoading } = useWebSocket();\n  const { error, success } = useNotification();\n  const { config } = useConfig();\n  \n  // 媒体录制相关的状态\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioChunks, setAudioChunks] = useState([]);\n  \n  // 音频配置\n  const audioConfig = {\n    sampleRate: 16000,\n    channels: 1\n  };\n  \n  // 监听服务器消息\n  useEffect(() => {\n    const handleServerMessage = (event) => {\n      const message = event.detail;\n      console.log('ChatSection收到服务器消息:', message);\n      \n      // 处理聊天消息\n      if (message.type === 'response') {\n        // 添加助手回复\n        if (message.text) {\n          addMessage('assistant', message.text);\n        }\n        \n        // 添加状态消息\n        if (message.status && message.message) {\n          addStatusMessage(message.message);\n        }\n        \n        // 处理参考图像\n        if (message.refImagePath) {\n          addMessage('system', `参考图像: ${config.refImagePath}`);\n        }\n      }\n      // 处理错误消息\n      else if (message.type === 'error') {\n        error(message.message || '出现错误，请重试');\n        addStatusMessage('错误: ' + (message.message || '未知错误'));\n      }\n    };\n    \n    window.addEventListener('server-message', handleServerMessage);\n    \n    return () => {\n      window.removeEventListener('server-message', handleServerMessage);\n    };\n  }, []);\n  \n  // 初始化媒体录制\n  const initMediaRecorder = async () => {\n    try {\n      console.log('初始化媒体录制器');\n      \n      // 请求音频权限\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      \n      // 设置音频处理\n      const options = { mimeType: 'audio/webm' };\n      const recorder = new MediaRecorder(stream, options);\n      \n      // 收集音频数据\n      recorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          setAudioChunks(prev => [...prev, event.data]);\n        }\n      };\n      \n      // 处理录制停止\n      recorder.onstop = async () => {\n        if (audioChunks.length === 0) {\n          console.warn('没有收集到音频数据');\n          return;\n        }\n        \n        try {\n          // 合并音频块\n          const audioBlob = new Blob(audioChunks, { type: 'audio/webm' });\n          \n          // 发送音频数据到服务器\n          console.log('发送音频数据, 大小:', audioBlob.size);\n          const result = sendAudioData(audioBlob, {\n            language: config.language,\n            voiceName: config.voiceName,\n            useEchoMimic: config.useEchoMimic\n          });\n          \n          if (result) {\n            // 添加用户消息 (使用\"录音中...\"作为占位符)\n            addMessage('user', '🎤 语音输入');\n            \n            // 重置音频块\n            setAudioChunks([]);\n            \n            // 设置加载状态\n            setLoading(true, '处理中...');\n          }\n        } catch (err) {\n          console.error('处理录音失败:', err);\n          error('处理录音失败');\n        }\n      };\n      \n      // 保存录制器实例\n      setMediaRecorder(recorder);\n      success('麦克风初始化成功');\n      \n    } catch (err) {\n      console.error('初始化媒体录制失败:', err);\n      error('无法访问麦克风，请确保已授予权限');\n    }\n  };\n  \n  // 组件挂载时初始化媒体录制\n  useEffect(() => {\n    // 自动初始化媒体录制器\n    if (!mediaRecorder) {\n      initMediaRecorder();\n    }\n    \n    // 组件卸载时清理\n    return () => {\n      if (mediaRecorder && mediaRecorder.state !== 'inactive') {\n        mediaRecorder.stop();\n      }\n    };\n  }, []);\n  \n  // 添加消息到聊天\n  const addMessage = (role, content) => {\n    setMessages(prev => [\n      ...prev, \n      { \n        id: Date.now(),\n        role,\n        content,\n        timestamp: new Date().toLocaleTimeString()\n      }\n    ]);\n  };\n  \n  // 添加状态消息\n  const addStatusMessage = (content) => {\n    setMessages(prev => [\n      ...prev, \n      { \n        id: Date.now(),\n        role: 'status',\n        content,\n        timestamp: new Date().toLocaleTimeString()\n      }\n    ]);\n  };\n  \n  // 自动滚动到最新消息\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n  \n  // 处理输入变化\n  const handleInputChange = (e) => {\n    setInputText(e.target.value);\n  };\n  \n  // 开始录音\n  const startRecording = () => {\n    if (!mediaRecorder) {\n      initMediaRecorder().then(() => {\n        if (mediaRecorder) {\n          mediaRecorder.start();\n          setIsRecording(true);\n        }\n      });\n    } else {\n      mediaRecorder.start();\n      setIsRecording(true);\n    }\n  };\n  \n  // 停止录音\n  const stopRecording = () => {\n    if (mediaRecorder && mediaRecorder.state !== 'inactive') {\n      mediaRecorder.stop();\n    }\n    setIsRecording(false);\n  };\n  \n  // 发送文本消息\n  const sendTextMessage = () => {\n    if (!inputText.trim()) return;\n    \n    // 如果未连接，显示错误\n    if (!isConnected) {\n      error('未连接到服务器，请等待连接恢复');\n      return;\n    }\n    \n    // 将消息添加到聊天\n    addMessage('user', inputText);\n    \n    // 发送消息到服务器\n    const result = sendMessage({\n      type: 'message',\n      text: inputText,\n      language: config.language,\n      voiceName: config.voiceName,\n      useEchoMimic: config.useEchoMimic\n    });\n    \n    // 如果成功发送，清空输入框并设置加载状态\n    if (result) {\n      setInputText('');\n      setLoading(true, '思考中...');\n    }\n  };\n  \n  // 监听回车键\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendTextMessage();\n    }\n  };\n  \n  // 渲染消息\n  const renderMessages = () => {\n    return messages.map(message => (\n      <div key={message.id} className={`message ${message.role}`}>\n        {message.role === 'user' && <div className=\"avatar user-avatar\"><i className=\"fas fa-user\"></i></div>}\n        {message.role === 'assistant' && <div className=\"avatar assistant-avatar\"><i className=\"fas fa-robot\"></i></div>}\n        \n        <div className=\"message-content\">\n          <div className=\"message-text\">{message.content}</div>\n          <div className=\"message-time\">{message.timestamp}</div>\n        </div>\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"chat-section\">\n      <div className=\"chat-header\">\n        <h3>聊天窗口</h3>\n        <div className=\"connection-status\">\n          <span className={`status-dot ${isConnected ? 'connected' : 'disconnected'}`}></span>\n          <span className=\"status-text\">{isConnected ? '已连接' : '未连接'}</span>\n        </div>\n      </div>\n      \n      <div className=\"chat-messages\">\n        {messages.length === 0 ? (\n          <div className=\"empty-chat\">\n            <i className=\"fas fa-comment-dots\"></i>\n            <p>与数字人助手开始对话吧！</p>\n            <p className=\"tip\">你可以输入文字，或点击麦克风按钮进行语音输入</p>\n          </div>\n        ) : (\n          renderMessages()\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n      \n      <div className=\"chat-input\">\n        <textarea\n          ref={inputRef}\n          value={inputText}\n          onChange={handleInputChange}\n          onKeyPress={handleKeyPress}\n          placeholder=\"输入消息...\"\n          disabled={!isConnected}\n        />\n        \n        <div className=\"input-controls\">\n          <button \n            className={`voice-btn ${isRecording ? 'recording' : ''}`}\n            onClick={isRecording ? stopRecording : startRecording}\n            disabled={!isConnected}\n          >\n            <i className={`fas ${isRecording ? 'fa-stop' : 'fa-microphone'}`}></i>\n          </button>\n          \n          <button \n            className=\"send-btn\" \n            onClick={sendTextMessage}\n            disabled={!inputText.trim() || !isConnected}\n          >\n            <i className=\"fas fa-paper-plane\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}