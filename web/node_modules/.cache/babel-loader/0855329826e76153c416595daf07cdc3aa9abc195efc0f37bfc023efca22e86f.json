{"ast":null,"code":"var _jsxFileName = \"/Users/niko/digital-human/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport DigitalHuman from './components/DigitalHuman';\nimport ChatSection from './components/ChatSection';\nimport NotificationContainer from './components/NotificationContainer';\nimport SettingsPanel from './components/SettingsPanel';\nimport LoadingOverlay from './components/LoadingOverlay';\nimport StatusBar from './components/StatusBar';\nimport EchoMimicPlayer from './components/EchoMimicPlayer';\nimport { useConfig } from './contexts/ConfigContext';\nimport { useWebSocket } from './contexts/WebSocketContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    config\n  } = useConfig();\n  const {\n    connectionStatus,\n    statusMessage,\n    isLoading,\n    loadingMessage\n  } = useWebSocket();\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const [videoSrc, setVideoSrc] = useState(null);\n  const [showEchoMimic, setShowEchoMimic] = useState(false);\n\n  // 处理主题切换\n  useEffect(() => {\n    const htmlElement = document.documentElement;\n    if (config.theme === 'dark') {\n      htmlElement.classList.add('dark-theme');\n    } else {\n      htmlElement.classList.remove('dark-theme');\n    }\n  }, [config.theme]);\n\n  // 监听WebSocket消息以获取生成的视频\n  useEffect(() => {\n    // 创建事件监听器\n    const handleVideoAvailable = event => {\n      const videoData = event.detail;\n      setVideoSrc(videoData.videoUrl);\n      setShowEchoMimic(true);\n    };\n\n    // 添加事件监听器\n    window.addEventListener('videoAvailable', handleVideoAvailable);\n\n    // 清理函数\n    return () => {\n      window.removeEventListener('videoAvailable', handleVideoAvailable);\n    };\n  }, []);\n\n  // 切换设置面板\n  const toggleSettings = () => {\n    setSettingsOpen(!settingsOpen);\n  };\n\n  // 获取状态栏显示的状态\n  const getStatusBarState = () => {\n    switch (connectionStatus) {\n      case 'online':\n        return 'online';\n      case 'connecting':\n        return 'connecting';\n      case 'offline':\n      default:\n        return 'offline';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      toggleSettings: toggleSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"digital-human-container\",\n        children: config.useEchoMimic ? showEchoMimic ? /*#__PURE__*/_jsxDEV(EchoMimicPlayer, {\n          videoSrc: videoSrc,\n          onClose: () => setShowEchoMimic(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"waiting-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u7B49\\u5F85\\u89C6\\u9891\\u751F\\u6210...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(DigitalHuman, {\n          modelPath: config.modelPath\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: /*#__PURE__*/_jsxDEV(ChatSection, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatusBar, {\n      status: getStatusBarState(),\n      message: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SettingsPanel, {\n      isOpen: settingsOpen,\n      onClose: () => setSettingsOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      message: loadingMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y58Itx6kktyplCh9nEfsSwEuia8=\", false, function () {\n  return [useConfig, useWebSocket];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","DigitalHuman","ChatSection","NotificationContainer","SettingsPanel","LoadingOverlay","StatusBar","EchoMimicPlayer","useConfig","useWebSocket","jsxDEV","_jsxDEV","App","_s","config","connectionStatus","statusMessage","isLoading","loadingMessage","settingsOpen","setSettingsOpen","videoSrc","setVideoSrc","showEchoMimic","setShowEchoMimic","htmlElement","document","documentElement","theme","classList","add","remove","handleVideoAvailable","event","videoData","detail","videoUrl","window","addEventListener","removeEventListener","toggleSettings","getStatusBarState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","useEchoMimic","onClose","modelPath","status","message","isOpen","_c","$RefreshReg$"],"sources":["/Users/niko/digital-human/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport DigitalHuman from './components/DigitalHuman';\nimport ChatSection from './components/ChatSection';\nimport NotificationContainer from './components/NotificationContainer';\nimport SettingsPanel from './components/SettingsPanel';\nimport LoadingOverlay from './components/LoadingOverlay';\nimport StatusBar from './components/StatusBar';\nimport EchoMimicPlayer from './components/EchoMimicPlayer';\nimport { useConfig } from './contexts/ConfigContext';\nimport { useWebSocket } from './contexts/WebSocketContext';\n\nfunction App() {\n  const { config } = useConfig();\n  const { connectionStatus, statusMessage, isLoading, loadingMessage } = useWebSocket();\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const [videoSrc, setVideoSrc] = useState(null);\n  const [showEchoMimic, setShowEchoMimic] = useState(false);\n\n  // 处理主题切换\n  useEffect(() => {\n    const htmlElement = document.documentElement;\n    \n    if (config.theme === 'dark') {\n      htmlElement.classList.add('dark-theme');\n    } else {\n      htmlElement.classList.remove('dark-theme');\n    }\n  }, [config.theme]);\n  \n  // 监听WebSocket消息以获取生成的视频\n  useEffect(() => {\n    // 创建事件监听器\n    const handleVideoAvailable = (event) => {\n      const videoData = event.detail;\n      setVideoSrc(videoData.videoUrl);\n      setShowEchoMimic(true);\n    };\n    \n    // 添加事件监听器\n    window.addEventListener('videoAvailable', handleVideoAvailable);\n    \n    // 清理函数\n    return () => {\n      window.removeEventListener('videoAvailable', handleVideoAvailable);\n    };\n  }, []);\n\n  // 切换设置面板\n  const toggleSettings = () => {\n    setSettingsOpen(!settingsOpen);\n  };\n\n  // 获取状态栏显示的状态\n  const getStatusBarState = () => {\n    switch (connectionStatus) {\n      case 'online':\n        return 'online';\n      case 'connecting':\n        return 'connecting';\n      case 'offline':\n      default:\n        return 'offline';\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <Header toggleSettings={toggleSettings} />\n      \n      <main className=\"main-content\">\n        <div className=\"digital-human-container\">\n          {config.useEchoMimic ? (\n            showEchoMimic ? (\n              <EchoMimicPlayer \n                videoSrc={videoSrc} \n                onClose={() => setShowEchoMimic(false)}\n              />\n            ) : (\n              <div className=\"waiting-container\">\n                <p>等待视频生成...</p>\n              </div>\n            )\n          ) : (\n            <DigitalHuman modelPath={config.modelPath} />\n          )}\n        </div>\n        \n        <div className=\"chat-container\">\n          <ChatSection />\n        </div>\n      </main>\n      \n      <StatusBar \n        status={getStatusBarState()} \n        message={statusMessage} \n      />\n      \n      <SettingsPanel \n        isOpen={settingsOpen} \n        onClose={() => setSettingsOpen(false)} \n      />\n      \n      <NotificationContainer />\n      \n      {isLoading && (\n        <LoadingOverlay message={loadingMessage} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}