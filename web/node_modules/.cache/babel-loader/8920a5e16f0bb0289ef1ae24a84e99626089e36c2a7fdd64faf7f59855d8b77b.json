{"ast":null,"code":"var _jsxFileName = \"/Users/niko/digital-human/frontend/src/components/DigitalHuman/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './DigitalHuman.css';\nimport { useConfig } from '../../contexts/ConfigContext';\nimport { useNotification } from '../../contexts/NotificationContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DigitalHuman = ({\n  modelPath\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [model, setModel] = useState(null);\n  const {\n    config\n  } = useConfig();\n  const {\n    success,\n    error: showError\n  } = useNotification();\n\n  // Live2D模型初始化\n  useEffect(() => {\n    let mounted = true;\n    let app = null;\n\n    // 如果使用EchoMimic，不加载Live2D模型\n    if (config.useEchoMimic) {\n      console.log('已启用EchoMimic，跳过Live2D模型加载');\n      setLoading(false);\n      setError(null);\n      return () => {};\n    }\n    const initLive2D = async () => {\n      console.log('初始化Live2D模型');\n      try {\n        // 调试输出，查看已加载的对象\n        console.log('==== 已加载对象诊断 ====');\n        console.log('window.PIXI 是否存在:', !!window.PIXI);\n        if (window.PIXI) {\n          console.log('PIXI版本:', window.PIXI.VERSION);\n          console.log('PIXI.live2d 是否存在:', !!window.PIXI.live2d);\n          if (window.PIXI.live2d) {\n            console.log('PIXI.live2d.version:', window.PIXI.live2d.version);\n            console.log('PIXI.live2d.Live2DModel 是否存在:', !!window.PIXI.live2d.Live2DModel);\n            if (window.PIXI.live2d.Live2DModel) {\n              console.log('registerTicker 是否存在:', typeof window.PIXI.live2d.Live2DModel.registerTicker === 'function');\n            }\n          }\n        }\n        console.log('window.Live2DCubismCore 是否存在:', !!window.Live2DCubismCore);\n        console.log('==== 诊断结束 ====');\n\n        // 确保所有必要的脚本已加载\n        // 如果没有加载，我们需要手动加载\n        if (!window.PIXI) {\n          console.log('PIXI未加载，尝试手动加载');\n          await loadScript('/lib/pixi.min.js');\n          await loadScript('/lib/math-extras.min.js');\n        }\n        if (!window.Live2DCubismCore) {\n          console.log('Live2DCubismCore未加载，尝试手动加载');\n          await loadScript('/lib/live2dcubismcore.min.js');\n        }\n        if (!window.PIXI || !window.PIXI.live2d) {\n          console.log('PIXI.live2d未加载，尝试手动加载');\n          await loadScript('/lib/index.min.js');\n\n          // 再次检查\n          console.log('加载后检查 - PIXI.live2d 是否存在:', !!window.PIXI.live2d);\n          if (window.PIXI.live2d) {\n            console.log('加载后检查 - PIXI.live2d.Live2DModel 是否存在:', !!window.PIXI.live2d.Live2DModel);\n          }\n        }\n\n        // 最终检查所有库是否已正确加载\n        if (!window.PIXI) {\n          throw new Error('PIXI未加载，请检查网络连接并刷新页面');\n        }\n        if (!window.PIXI.live2d || !window.PIXI.live2d.Live2DModel) {\n          // 尝试全局变量获取\n          if (window.Live2DModel) {\n            console.log('找到全局Live2DModel对象');\n            window.PIXI.live2d = window.PIXI.live2d || {};\n            window.PIXI.live2d.Live2DModel = window.Live2DModel;\n          } else {\n            throw new Error('PIXI.live2d.Live2DModel未加载，请检查网络连接并刷新页面');\n          }\n        }\n        console.log('所有库已加载，开始初始化模型');\n        setLoading(true);\n        setError(null);\n        const canvas = canvasRef.current;\n        if (!canvas) {\n          throw new Error('Canvas元素不存在');\n        }\n        console.log('创建PIXI应用');\n\n        // 创建PIXI应用\n        app = new window.PIXI.Application({\n          view: canvas,\n          autoStart: true,\n          backgroundAlpha: 0,\n          backgroundColor: 0xffffff,\n          resizeTo: canvas.parentElement,\n          width: canvas.parentElement.clientWidth,\n          height: canvas.parentElement.clientHeight\n        });\n\n        // 设置模型缩放模式\n        if (typeof window.PIXI.live2d.Live2DModel.registerTicker === 'function') {\n          console.log('注册PIXI ticker');\n          window.PIXI.live2d.Live2DModel.registerTicker(app.ticker);\n        } else {\n          console.warn('registerTicker方法未找到，尝试使用其他方法初始化');\n          // 尝试替代方法\n          if (window.PIXI.live2d.Live2DModel.setTicker) {\n            window.PIXI.live2d.Live2DModel.setTicker(app.ticker);\n          }\n        }\n\n        // 构建完整的模型路径\n        const fullModelPath = modelPath.startsWith('/') ? `${window.location.origin}${modelPath}` : `${window.location.origin}/${modelPath}`;\n        console.log(`开始加载Live2D模型: ${fullModelPath}`);\n        try {\n          const live2dModel = await window.PIXI.live2d.Live2DModel.from(fullModelPath);\n          if (!live2dModel) {\n            throw new Error('模型加载失败，请检查模型文件是否存在');\n          }\n          console.log('模型加载成功，进行缩放和定位');\n\n          // 调整模型位置和缩放\n          const scaleX = canvas.width * 0.8 / live2dModel.width;\n          const scaleY = canvas.height * 0.8 / live2dModel.height;\n          const scale = Math.min(scaleX, scaleY);\n          live2dModel.scale.set(scale);\n          live2dModel.anchor.set(0.5, 0.5);\n          live2dModel.position.set(canvas.width / 2, canvas.height / 2);\n\n          // 创建容器并添加模型\n          const container = new window.PIXI.Container();\n          container.addChild(live2dModel);\n          app.stage.addChild(container);\n\n          // 监听窗口大小变化\n          const resizeHandler = () => {\n            if (live2dModel) {\n              // 调整画布尺寸\n              app.renderer.resize(canvas.parentElement.clientWidth, canvas.parentElement.clientHeight);\n\n              // 重新定位模型\n              live2dModel.position.set(app.renderer.width / 2, app.renderer.height / 2);\n            }\n          };\n          window.addEventListener('resize', resizeHandler);\n          if (mounted) {\n            setModel(live2dModel);\n            setLoading(false);\n            success('Live2D模型加载成功');\n          }\n        } catch (modelError) {\n          console.error('加载模型文件失败:', modelError);\n          throw new Error(`加载模型文件失败: ${modelError.message || '请检查模型路径是否正确'}`);\n        }\n      } catch (err) {\n        console.error('加载Live2D模型失败:', err);\n        if (mounted) {\n          setError(err.message || '模型加载失败，请检查路径是否正确');\n          setLoading(false);\n          showError('Live2D模型加载失败: ' + (err.message || '请检查路径是否正确'));\n        }\n      }\n    };\n\n    // 延迟一点初始化，确保DOM和脚本已完全加载\n    setTimeout(() => {\n      initLive2D();\n    }, 2000);\n    return () => {\n      mounted = false;\n      if (app) {\n        app.destroy(true, {\n          children: true,\n          texture: true,\n          baseTexture: true\n        });\n      }\n    };\n  }, [modelPath, success, showError, config.useEchoMimic]);\n\n  // 处理服务器动画消息\n  useEffect(() => {\n    const handleServerMessage = event => {\n      const message = event.detail;\n\n      // 只有当不使用EchoMimic时才处理动画\n      if (message.type === 'response' && !message.useEchoMimic && message.animation && model) {\n        playAnimation(model, message.animation);\n      }\n    };\n    window.addEventListener('server-message', handleServerMessage);\n    return () => {\n      window.removeEventListener('server-message', handleServerMessage);\n    };\n  }, [model]);\n\n  // 播放动画\n  const playAnimation = (model, animation) => {\n    try {\n      // 播放表情\n      if (animation.expression) {\n        var _model$internalModel$;\n        const expressionIndex = (_model$internalModel$ = model.internalModel.motionManager.expressionManager) === null || _model$internalModel$ === void 0 ? void 0 : _model$internalModel$.expressionNames.findIndex(name => name.toLowerCase().includes(animation.expression));\n        if (expressionIndex !== -1 && expressionIndex !== undefined) {\n          var _model$internalModel$2;\n          (_model$internalModel$2 = model.internalModel.motionManager.expressionManager) === null || _model$internalModel$2 === void 0 ? void 0 : _model$internalModel$2.setExpression(expressionIndex);\n        }\n      }\n\n      // 播放动作\n      if (animation.motion) {\n        playMotion(model, animation.motion, animation.intensity || 0.8);\n      }\n    } catch (error) {\n      console.error('播放动画失败:', error);\n    }\n  };\n\n  // 播放动作\n  const playMotion = (model, motionName, intensity = 0.8) => {\n    try {\n      let motionGroup = 'Idle';\n      switch (motionName.toLowerCase()) {\n        case 'talking':\n          motionGroup = 'Talk';\n          break;\n        case 'nodding':\n          motionGroup = 'Nod';\n          break;\n        case 'thinking':\n          motionGroup = 'Think';\n          break;\n        case 'greeting':\n          motionGroup = 'Greeting';\n          break;\n        case 'surprised':\n          motionGroup = 'Surprised';\n          break;\n        default:\n          motionGroup = 'Idle';\n      }\n\n      // 查找模型中是否有对应的动作组\n      const groups = model.internalModel.motionManager.definitions;\n      const availableGroups = Object.keys(groups);\n\n      // 如果没有完全匹配的组，尝试部分匹配\n      const bestMatch = availableGroups.find(group => group.toLowerCase().includes(motionGroup.toLowerCase())) || availableGroups[0];\n      if (bestMatch) {\n        const availableMotions = groups[bestMatch].length;\n        const motionIndex = Math.floor(Math.random() * availableMotions);\n        model.motion(bestMatch, motionIndex, intensity);\n      }\n    } catch (error) {\n      console.error('播放动作失败:', error);\n    }\n  };\n\n  // 加载脚本工具函数\n  const loadScript = src => {\n    return new Promise((resolve, reject) => {\n      console.log(`尝试加载脚本: ${src}`);\n      // 检查脚本是否已加载\n      const existingScript = document.querySelector(`script[src=\"${src}\"]`);\n      if (existingScript) {\n        console.log(`脚本已存在，跳过加载: ${src}`);\n        resolve();\n        return;\n      }\n      const script = document.createElement('script');\n      script.src = src;\n      script.async = false; // 使用同步加载确保顺序\n      script.onload = () => {\n        console.log(`脚本加载成功: ${src}`);\n        resolve();\n      };\n      script.onerror = err => {\n        console.error(`脚本加载失败: ${src}`, err);\n        reject(new Error(`脚本加载失败: ${src}`));\n      };\n      document.head.appendChild(script);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"digital-human-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"model-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        id: \"live2d-canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-spinner fa-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Live2D \\u6A21\\u578B\\u52A0\\u8F7D\\u4E2D...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this), error && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-placeholder error\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-exclamation-triangle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Live2D\\u6A21\\u578B\\u52A0\\u8F7D\\u5931\\u8D25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"retry-button\",\n          onClick: () => window.location.reload(),\n          children: \"\\u5237\\u65B0\\u9875\\u9762\\u91CD\\u8BD5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 5\n  }, this);\n};\n_s(DigitalHuman, \"kKkE2oIny7JPqXviAmzTNUo+r9M=\", false, function () {\n  return [useConfig, useNotification];\n});\n_c = DigitalHuman;\nexport default DigitalHuman;\nvar _c;\n$RefreshReg$(_c, \"DigitalHuman\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useConfig","useNotification","jsxDEV","_jsxDEV","DigitalHuman","modelPath","_s","canvasRef","loading","setLoading","error","setError","model","setModel","config","success","showError","mounted","app","useEchoMimic","console","log","initLive2D","window","PIXI","VERSION","live2d","version","Live2DModel","registerTicker","Live2DCubismCore","loadScript","Error","canvas","current","Application","view","autoStart","backgroundAlpha","backgroundColor","resizeTo","parentElement","width","clientWidth","height","clientHeight","ticker","warn","setTicker","fullModelPath","startsWith","location","origin","live2dModel","from","scaleX","scaleY","scale","Math","min","set","anchor","position","container","Container","addChild","stage","resizeHandler","renderer","resize","addEventListener","modelError","message","err","setTimeout","destroy","children","texture","baseTexture","handleServerMessage","event","detail","type","animation","playAnimation","removeEventListener","expression","_model$internalModel$","expressionIndex","internalModel","motionManager","expressionManager","expressionNames","findIndex","name","toLowerCase","includes","undefined","_model$internalModel$2","setExpression","motion","playMotion","intensity","motionName","motionGroup","groups","definitions","availableGroups","Object","keys","bestMatch","find","group","availableMotions","length","motionIndex","floor","random","src","Promise","resolve","reject","existingScript","document","querySelector","script","createElement","async","onload","onerror","head","appendChild","className","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","reload","_c","$RefreshReg$"],"sources":["/Users/niko/digital-human/frontend/src/components/DigitalHuman/index.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './DigitalHuman.css';\nimport { useConfig } from '../../contexts/ConfigContext';\nimport { useNotification } from '../../contexts/NotificationContext';\n\nconst DigitalHuman = ({ modelPath }) => {\n  const canvasRef = useRef(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [model, setModel] = useState(null);\n  const { config } = useConfig();\n  const { success, error: showError } = useNotification();\n\n  // Live2D模型初始化\n  useEffect(() => {\n    let mounted = true;\n    let app = null;\n    \n    // 如果使用EchoMimic，不加载Live2D模型\n    if (config.useEchoMimic) {\n      console.log('已启用EchoMimic，跳过Live2D模型加载');\n      setLoading(false);\n      setError(null);\n      return () => {};\n    }\n    \n    const initLive2D = async () => {\n      console.log('初始化Live2D模型');\n      \n      try {\n        // 调试输出，查看已加载的对象\n        console.log('==== 已加载对象诊断 ====');\n        console.log('window.PIXI 是否存在:', !!window.PIXI);\n        if (window.PIXI) {\n          console.log('PIXI版本:', window.PIXI.VERSION);\n          console.log('PIXI.live2d 是否存在:', !!window.PIXI.live2d);\n          if (window.PIXI.live2d) {\n            console.log('PIXI.live2d.version:', window.PIXI.live2d.version);\n            console.log('PIXI.live2d.Live2DModel 是否存在:', !!window.PIXI.live2d.Live2DModel);\n            if (window.PIXI.live2d.Live2DModel) {\n              console.log('registerTicker 是否存在:', typeof window.PIXI.live2d.Live2DModel.registerTicker === 'function');\n            }\n          }\n        }\n        console.log('window.Live2DCubismCore 是否存在:', !!window.Live2DCubismCore);\n        console.log('==== 诊断结束 ====');\n        \n        // 确保所有必要的脚本已加载\n        // 如果没有加载，我们需要手动加载\n        if (!window.PIXI) {\n          console.log('PIXI未加载，尝试手动加载');\n          await loadScript('/lib/pixi.min.js');\n          await loadScript('/lib/math-extras.min.js');\n        }\n        \n        if (!window.Live2DCubismCore) {\n          console.log('Live2DCubismCore未加载，尝试手动加载');\n          await loadScript('/lib/live2dcubismcore.min.js');\n        }\n        \n        if (!window.PIXI || !window.PIXI.live2d) {\n          console.log('PIXI.live2d未加载，尝试手动加载');\n          await loadScript('/lib/index.min.js');\n          \n          // 再次检查\n          console.log('加载后检查 - PIXI.live2d 是否存在:', !!window.PIXI.live2d);\n          if (window.PIXI.live2d) {\n            console.log('加载后检查 - PIXI.live2d.Live2DModel 是否存在:', !!window.PIXI.live2d.Live2DModel);\n          }\n        }\n        \n        // 最终检查所有库是否已正确加载\n        if (!window.PIXI) {\n          throw new Error('PIXI未加载，请检查网络连接并刷新页面');\n        }\n        \n        if (!window.PIXI.live2d || !window.PIXI.live2d.Live2DModel) {\n          // 尝试全局变量获取\n          if (window.Live2DModel) {\n            console.log('找到全局Live2DModel对象');\n            window.PIXI.live2d = window.PIXI.live2d || {};\n            window.PIXI.live2d.Live2DModel = window.Live2DModel;\n          } else {\n            throw new Error('PIXI.live2d.Live2DModel未加载，请检查网络连接并刷新页面');\n          }\n        }\n        \n        console.log('所有库已加载，开始初始化模型');\n        \n        setLoading(true);\n        setError(null);\n        \n        const canvas = canvasRef.current;\n        if (!canvas) {\n          throw new Error('Canvas元素不存在');\n        }\n        \n        console.log('创建PIXI应用');\n        \n        // 创建PIXI应用\n        app = new window.PIXI.Application({\n          view: canvas,\n          autoStart: true,\n          backgroundAlpha: 0,\n          backgroundColor: 0xffffff,\n          resizeTo: canvas.parentElement,\n          width: canvas.parentElement.clientWidth,\n          height: canvas.parentElement.clientHeight\n        });\n        \n        // 设置模型缩放模式\n        if (typeof window.PIXI.live2d.Live2DModel.registerTicker === 'function') {\n          console.log('注册PIXI ticker');\n          window.PIXI.live2d.Live2DModel.registerTicker(app.ticker);\n        } else {\n          console.warn('registerTicker方法未找到，尝试使用其他方法初始化');\n          // 尝试替代方法\n          if (window.PIXI.live2d.Live2DModel.setTicker) {\n            window.PIXI.live2d.Live2DModel.setTicker(app.ticker);\n          }\n        }\n        \n        // 构建完整的模型路径\n        const fullModelPath = modelPath.startsWith('/') \n          ? `${window.location.origin}${modelPath}` \n          : `${window.location.origin}/${modelPath}`;\n          \n        console.log(`开始加载Live2D模型: ${fullModelPath}`);\n        \n        try {\n          const live2dModel = await window.PIXI.live2d.Live2DModel.from(fullModelPath);\n          \n          if (!live2dModel) {\n            throw new Error('模型加载失败，请检查模型文件是否存在');\n          }\n          \n          console.log('模型加载成功，进行缩放和定位');\n          \n          // 调整模型位置和缩放\n          const scaleX = (canvas.width * 0.8) / live2dModel.width;\n          const scaleY = (canvas.height * 0.8) / live2dModel.height;\n          const scale = Math.min(scaleX, scaleY);\n          \n          live2dModel.scale.set(scale);\n          live2dModel.anchor.set(0.5, 0.5);\n          live2dModel.position.set(canvas.width / 2, canvas.height / 2);\n          \n          // 创建容器并添加模型\n          const container = new window.PIXI.Container();\n          container.addChild(live2dModel);\n          app.stage.addChild(container);\n          \n          // 监听窗口大小变化\n          const resizeHandler = () => {\n            if (live2dModel) {\n              // 调整画布尺寸\n              app.renderer.resize(canvas.parentElement.clientWidth, canvas.parentElement.clientHeight);\n              \n              // 重新定位模型\n              live2dModel.position.set(\n                app.renderer.width / 2,\n                app.renderer.height / 2\n              );\n            }\n          };\n          \n          window.addEventListener('resize', resizeHandler);\n          \n          if (mounted) {\n            setModel(live2dModel);\n            setLoading(false);\n            success('Live2D模型加载成功');\n          }\n        } catch (modelError) {\n          console.error('加载模型文件失败:', modelError);\n          throw new Error(`加载模型文件失败: ${modelError.message || '请检查模型路径是否正确'}`);\n        }\n        \n      } catch (err) {\n        console.error('加载Live2D模型失败:', err);\n        if (mounted) {\n          setError(err.message || '模型加载失败，请检查路径是否正确');\n          setLoading(false);\n          showError('Live2D模型加载失败: ' + (err.message || '请检查路径是否正确'));\n        }\n      }\n    };\n    \n    // 延迟一点初始化，确保DOM和脚本已完全加载\n    setTimeout(() => {\n      initLive2D();\n    }, 2000);\n    \n    return () => {\n      mounted = false;\n      if (app) {\n        app.destroy(true, {children: true, texture: true, baseTexture: true});\n      }\n    };\n  }, [modelPath, success, showError, config.useEchoMimic]);\n\n  // 处理服务器动画消息\n  useEffect(() => {\n    const handleServerMessage = (event) => {\n      const message = event.detail;\n      \n      // 只有当不使用EchoMimic时才处理动画\n      if (message.type === 'response' && !message.useEchoMimic && message.animation && model) {\n        playAnimation(model, message.animation);\n      }\n    };\n    \n    window.addEventListener('server-message', handleServerMessage);\n    \n    return () => {\n      window.removeEventListener('server-message', handleServerMessage);\n    };\n  }, [model]);\n\n  // 播放动画\n  const playAnimation = (model, animation) => {\n    try {\n      // 播放表情\n      if (animation.expression) {\n        const expressionIndex = model.internalModel.motionManager.expressionManager?.expressionNames.findIndex(\n          name => name.toLowerCase().includes(animation.expression)\n        );\n        \n        if (expressionIndex !== -1 && expressionIndex !== undefined) {\n          model.internalModel.motionManager.expressionManager?.setExpression(expressionIndex);\n        }\n      }\n      \n      // 播放动作\n      if (animation.motion) {\n        playMotion(model, animation.motion, animation.intensity || 0.8);\n      }\n    } catch (error) {\n      console.error('播放动画失败:', error);\n    }\n  };\n\n  // 播放动作\n  const playMotion = (model, motionName, intensity = 0.8) => {\n    try {\n      let motionGroup = 'Idle';\n      \n      switch (motionName.toLowerCase()) {\n        case 'talking':\n          motionGroup = 'Talk';\n          break;\n        case 'nodding':\n          motionGroup = 'Nod';\n          break;\n        case 'thinking':\n          motionGroup = 'Think';\n          break;\n        case 'greeting':\n          motionGroup = 'Greeting';\n          break;\n        case 'surprised':\n          motionGroup = 'Surprised';\n          break;\n        default:\n          motionGroup = 'Idle';\n      }\n      \n      // 查找模型中是否有对应的动作组\n      const groups = model.internalModel.motionManager.definitions;\n      const availableGroups = Object.keys(groups);\n      \n      // 如果没有完全匹配的组，尝试部分匹配\n      const bestMatch = availableGroups.find(group => \n        group.toLowerCase().includes(motionGroup.toLowerCase())\n      ) || availableGroups[0];\n      \n      if (bestMatch) {\n        const availableMotions = groups[bestMatch].length;\n        const motionIndex = Math.floor(Math.random() * availableMotions);\n        model.motion(bestMatch, motionIndex, intensity);\n      }\n    } catch (error) {\n      console.error('播放动作失败:', error);\n    }\n  };\n\n  // 加载脚本工具函数\n  const loadScript = (src) => {\n    return new Promise((resolve, reject) => {\n      console.log(`尝试加载脚本: ${src}`);\n      // 检查脚本是否已加载\n      const existingScript = document.querySelector(`script[src=\"${src}\"]`);\n      if (existingScript) {\n        console.log(`脚本已存在，跳过加载: ${src}`);\n        resolve();\n        return;\n      }\n\n      const script = document.createElement('script');\n      script.src = src;\n      script.async = false; // 使用同步加载确保顺序\n      script.onload = () => {\n        console.log(`脚本加载成功: ${src}`);\n        resolve();\n      };\n      script.onerror = (err) => {\n        console.error(`脚本加载失败: ${src}`, err);\n        reject(new Error(`脚本加载失败: ${src}`));\n      };\n      document.head.appendChild(script);\n    });\n  };\n\n  return (\n    <div className=\"digital-human-section\">\n      <div className=\"model-container\">\n        <canvas ref={canvasRef} id=\"live2d-canvas\"></canvas>\n        \n        {loading && (\n          <div className=\"model-placeholder\">\n            <i className=\"fas fa-spinner fa-spin\"></i>\n            <p>Live2D 模型加载中...</p>\n          </div>\n        )}\n        \n        {error && !loading && (\n          <div className=\"model-placeholder error\">\n            <i className=\"fas fa-exclamation-triangle\"></i>\n            <p>Live2D模型加载失败</p>\n            <p className=\"error-message\">{error}</p>\n            <button \n              className=\"retry-button\"\n              onClick={() => window.location.reload()}\n            >\n              刷新页面重试\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DigitalHuman;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}