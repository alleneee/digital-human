{"ast":null,"code":"var _jsxFileName = \"/Users/niko/digital-human/frontend/src/components/DigitalHuman/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './DigitalHuman.css';\nimport { useConfig } from '../../contexts/ConfigContext';\nimport { useNotification } from '../../contexts/NotificationContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DigitalHuman = () => {\n  _s();\n  const containerRef = useRef(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    config\n  } = useConfig();\n  const {\n    success,\n    error: showError\n  } = useNotification();\n\n  // 初始化EchoMimic容器\n  useEffect(() => {\n    let mounted = true;\n    const initEchoMimic = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // 确保容器已渲染\n        const container = containerRef.current;\n        if (!container) {\n          throw new Error('容器元素不存在');\n        }\n\n        // 这里可以放置EchoMimic相关的初始化代码\n        // 例如设置视频播放器等\n\n        if (mounted) {\n          setLoading(false);\n          success('数字人准备就绪');\n        }\n      } catch (err) {\n        console.error('初始化数字人失败:', err);\n        if (mounted) {\n          setError(err.message || '数字人初始化失败');\n          setLoading(false);\n          showError('数字人初始化失败: ' + (err.message || '未知错误'));\n        }\n      }\n    };\n\n    // 延迟初始化以确保DOM已完全加载\n    const timer = setTimeout(() => {\n      initEchoMimic();\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n      mounted = false;\n    };\n  }, [success, showError, config]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"digital-human-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"model-container\",\n      ref: containerRef,\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-spinner fa-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u6570\\u5B57\\u4EBA\\u51C6\\u5907\\u4E2D...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), error && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-placeholder error\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-exclamation-triangle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u6570\\u5B57\\u4EBA\\u521D\\u59CB\\u5316\\u5931\\u8D25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"retry-button\",\n          onClick: () => window.location.reload(),\n          children: \"\\u5237\\u65B0\\u9875\\u9762\\u91CD\\u8BD5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(DigitalHuman, \"KPocI1B9sV2DW4RH4hfRM5GfHcI=\", false, function () {\n  return [useConfig, useNotification];\n});\n_c = DigitalHuman;\nexport default DigitalHuman;\nvar _c;\n$RefreshReg$(_c, \"DigitalHuman\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useConfig","useNotification","jsxDEV","_jsxDEV","DigitalHuman","_s","containerRef","loading","setLoading","error","setError","config","success","showError","mounted","initEchoMimic","container","current","Error","err","console","message","timer","setTimeout","clearTimeout","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","_c","$RefreshReg$"],"sources":["/Users/niko/digital-human/frontend/src/components/DigitalHuman/index.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './DigitalHuman.css';\nimport { useConfig } from '../../contexts/ConfigContext';\nimport { useNotification } from '../../contexts/NotificationContext';\n\nconst DigitalHuman = () => {\n  const containerRef = useRef(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { config } = useConfig();\n  const { success, error: showError } = useNotification();\n\n  // 初始化EchoMimic容器\n  useEffect(() => {\n    let mounted = true;\n    \n    const initEchoMimic = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        // 确保容器已渲染\n        const container = containerRef.current;\n        if (!container) {\n          throw new Error('容器元素不存在');\n        }\n        \n        // 这里可以放置EchoMimic相关的初始化代码\n        // 例如设置视频播放器等\n        \n        if (mounted) {\n          setLoading(false);\n          success('数字人准备就绪');\n        }\n      } catch (err) {\n        console.error('初始化数字人失败:', err);\n        if (mounted) {\n          setError(err.message || '数字人初始化失败');\n          setLoading(false);\n          showError('数字人初始化失败: ' + (err.message || '未知错误'));\n        }\n      }\n    };\n    \n    // 延迟初始化以确保DOM已完全加载\n    const timer = setTimeout(() => {\n      initEchoMimic();\n    }, 1000);\n    \n    return () => {\n      clearTimeout(timer);\n      mounted = false;\n    };\n  }, [success, showError, config]);\n\n  return (\n    <div className=\"digital-human-section\">\n      <div className=\"model-container\" ref={containerRef}>\n        {/* EchoMimic视频将在这里显示 */}\n        \n        {loading && (\n          <div className=\"model-placeholder\">\n            <i className=\"fas fa-spinner fa-spin\"></i>\n            <p>数字人准备中...</p>\n          </div>\n        )}\n        \n        {error && !loading && (\n          <div className=\"model-placeholder error\">\n            <i className=\"fas fa-exclamation-triangle\"></i>\n            <p>数字人初始化失败</p>\n            <p className=\"error-message\">{error}</p>\n            <button \n              className=\"retry-button\"\n              onClick={() => window.location.reload()}\n            >\n              刷新页面重试\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DigitalHuman;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}