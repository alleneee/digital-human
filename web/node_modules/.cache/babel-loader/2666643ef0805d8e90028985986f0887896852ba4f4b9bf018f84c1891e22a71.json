{"ast":null,"code":"import { DeepgramConverter, isConverter } from \"./converters\";\nimport { secondsToTimestamp } from \"./lib/helpers\";\nconst parseInput = transcription => {\n  if (!isConverter(transcription)) {\n    return new DeepgramConverter(transcription);\n  }\n  return transcription;\n};\nconst webvtt = (transcription, lineLength = 8) => {\n  const output = [];\n  let data = parseInput(transcription);\n  // default top of file\n  output.push(\"WEBVTT\");\n  output.push(\"\");\n  // get converter specific headers\n  data.getHeaders ? output.push(data.getHeaders().join(\"\\n\")) : null;\n  data.getHeaders ? output.push(\"\") : null;\n  // get the lines\n  const lines = data.getLines(lineLength);\n  // is speaker output required?\n  const speakerLabels = \"speaker\" in lines[0][0];\n  lines.forEach(words => {\n    const firstWord = words[0];\n    const lastWord = words[words.length - 1];\n    output.push(`${secondsToTimestamp(firstWord.start)} --> ${secondsToTimestamp(lastWord.end)}`);\n    const line = words.map(word => {\n      var _a;\n      return (_a = word.punctuated_word) !== null && _a !== void 0 ? _a : word.word;\n    }).join(\" \");\n    const speakerLabel = speakerLabels ? `<v Speaker ${firstWord.speaker}>` : \"\";\n    output.push(`${speakerLabel}${line}`);\n    output.push(\"\");\n  });\n  return output.join(\"\\n\");\n};\nconst srt = (transcription, lineLength = 8) => {\n  const output = [];\n  const data = parseInput(transcription);\n  // get the lines\n  let lines = data.getLines(lineLength);\n  // is speaker output required?\n  const speakerLabels = \"speaker\" in lines[0][0];\n  let entry = 1;\n  let currentSpeaker;\n  lines.forEach(words => {\n    output.push((entry++).toString());\n    const firstWord = words[0];\n    const lastWord = words[words.length - 1];\n    output.push(`${secondsToTimestamp(firstWord.start, \"HH:mm:ss,SSS\")} --> ${secondsToTimestamp(lastWord.end, \"HH:mm:ss,SSS\")}`);\n    const line = words.map(word => {\n      var _a;\n      return (_a = word.punctuated_word) !== null && _a !== void 0 ? _a : word.word;\n    }).join(\" \");\n    const speakerLabel = speakerLabels && currentSpeaker !== firstWord.speaker ? `[Speaker ${firstWord.speaker}]\\n` : \"\";\n    output.push(`${speakerLabel}${line}`);\n    output.push(\"\");\n    currentSpeaker = firstWord.speaker;\n  });\n  return output.join(\"\\n\");\n};\nexport { webvtt, srt };\n/**\n * Helpful exports.\n */\nexport * from \"./converters\";\nexport * from \"./lib/types\";\nexport * from \"./lib/helpers\";","map":{"version":3,"names":["DeepgramConverter","isConverter","secondsToTimestamp","parseInput","transcription","webvtt","lineLength","output","data","push","getHeaders","join","lines","getLines","speakerLabels","forEach","words","firstWord","lastWord","length","start","end","line","map","word","_a","punctuated_word","speakerLabel","speaker","srt","entry","currentSpeaker","toString"],"sources":["/Users/niko/node_modules/.pnpm/@deepgram+captions@1.2.0/node_modules/@deepgram/captions/src/index.ts"],"sourcesContent":["import { DeepgramConverter, IConverter, isConverter } from \"./converters\";\nimport { chunkArray, secondsToTimestamp } from \"./lib/helpers\";\nimport { DeepgramResponse } from \"./lib/types\";\n\nconst parseInput = (transcription: any): IConverter => {\n  if (!isConverter(transcription)) {\n    return new DeepgramConverter(transcription as DeepgramResponse);\n  }\n\n  return transcription;\n};\n\nconst webvtt = (transcription: any, lineLength: number = 8): string => {\n  const output: string[] = [];\n\n  let data = parseInput(transcription);\n\n  // default top of file\n  output.push(\"WEBVTT\");\n  output.push(\"\");\n\n  // get converter specific headers\n  data.getHeaders ? output.push(data.getHeaders().join(\"\\n\")) : null;\n  data.getHeaders ? output.push(\"\") : null;\n\n  // get the lines\n  const lines = data.getLines(lineLength);\n\n  // is speaker output required?\n  const speakerLabels = \"speaker\" in lines[0][0];\n\n  lines.forEach((words) => {\n    const firstWord = words[0];\n    const lastWord = words[words.length - 1];\n\n    output.push(`${secondsToTimestamp(firstWord.start)} --> ${secondsToTimestamp(lastWord.end)}`);\n\n    const line = words.map((word) => word.punctuated_word ?? word.word).join(\" \");\n    const speakerLabel = speakerLabels ? `<v Speaker ${firstWord.speaker}>` : \"\";\n\n    output.push(`${speakerLabel}${line}`);\n    output.push(\"\");\n  });\n\n  return output.join(\"\\n\");\n};\n\nconst srt = (transcription: any, lineLength: number = 8): string => {\n  const output: string[] = [];\n\n  const data = parseInput(transcription);\n\n  // get the lines\n  let lines = data.getLines(lineLength);\n\n  // is speaker output required?\n  const speakerLabels = \"speaker\" in lines[0][0];\n\n  let entry = 1;\n  let currentSpeaker: any;\n\n  lines.forEach((words) => {\n    output.push((entry++).toString());\n\n    const firstWord = words[0];\n    const lastWord = words[words.length - 1];\n\n    output.push(\n      `${secondsToTimestamp(firstWord.start, \"HH:mm:ss,SSS\")} --> ${secondsToTimestamp(\n        lastWord.end,\n        \"HH:mm:ss,SSS\"\n      )}`\n    );\n\n    const line = words.map((word) => word.punctuated_word ?? word.word).join(\" \");\n    const speakerLabel =\n      speakerLabels && currentSpeaker !== firstWord.speaker\n        ? `[Speaker ${firstWord.speaker}]\\n`\n        : \"\";\n\n    output.push(`${speakerLabel}${line}`);\n    output.push(\"\");\n\n    currentSpeaker = firstWord.speaker;\n  });\n\n  return output.join(\"\\n\");\n};\n\nexport { webvtt, srt };\n\n/**\n * Helpful exports.\n */\nexport * from \"./converters\";\nexport * from \"./lib/types\";\nexport * from \"./lib/helpers\";\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}