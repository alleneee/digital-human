{"ast":null,"code":"import { DeepgramVersionError } from \"./lib/errors\";\nimport { AbstractClient, AgentLiveClient, ListenClient, ManageClient, ReadClient, SelfHostedRestClient, SpeakClient, ModelsRestClient } from \"./packages\";\n/**\n * The DeepgramClient class provides access to various Deepgram API clients, including ListenClient, ManageClient, SelfHostedRestClient, ReadClient, and SpeakClient.\n *\n * @see https://github.com/deepgram/deepgram-js-sdk\n */\nexport default class DeepgramClient extends AbstractClient {\n  /**\n   * Returns a new instance of the ListenClient, which provides access to the Deepgram API's listening functionality.\n   *\n   * @returns {ListenClient} A new instance of the ListenClient.\n   */\n  get listen() {\n    return new ListenClient(this.options);\n  }\n  /**\n   * Returns a new instance of the ManageClient, which provides access to the Deepgram API's management functionality.\n   *\n   * @returns {ManageClient} A new instance of the ManageClient.\n   */\n  get manage() {\n    return new ManageClient(this.options);\n  }\n  /**\n   * Returns a new instance of the ModelsRestClient, which provides access to the Deepgram API's model functionality.\n   *\n   * @returns {ModelsRestClient} A new instance of the ModelsRestClient.\n   */\n  get models() {\n    return new ModelsRestClient(this.options);\n  }\n  /**\n   * Returns a new instance of the SelfHostedRestClient, which provides access to the Deepgram API's self-hosted functionality.\n   *\n   * @returns {OnPremClient} A new instance of the SelfHostedRestClient named as OnPremClient.\n   * @deprecated use selfhosted() instead\n   */\n  get onprem() {\n    return this.selfhosted;\n  }\n  /**\n   * Returns a new instance of the SelfHostedRestClient, which provides access to the Deepgram API's self-hosted functionality.\n   *\n   * @returns {SelfHostedRestClient} A new instance of the SelfHostedRestClient.\n   */\n  get selfhosted() {\n    return new SelfHostedRestClient(this.options);\n  }\n  /**\n   * Returns a new instance of the ReadClient, which provides access to the Deepgram API's reading functionality.\n   *\n   * @returns {ReadClient} A new instance of the ReadClient.\n   */\n  get read() {\n    return new ReadClient(this.options);\n  }\n  /**\n   * Returns a new instance of the SpeakClient, which provides access to the Deepgram API's speaking functionality.\n   *\n   * @returns {SpeakClient} A new instance of the SpeakClient.\n   */\n  get speak() {\n    return new SpeakClient(this.options);\n  }\n  /**\n   * Returns a new instance of the AgentLiveClient, which provides access to Deepgram's Voice Agent API.\n   *\n   * @returns {AgentLiveClient} A new instance of the AgentLiveClient.\n   * @beta\n   */\n  agent(endpoint = \"/agent\") {\n    return new AgentLiveClient(this.options, endpoint);\n  }\n  /**\n   * @deprecated\n   * @see https://dpgr.am/js-v3\n   */\n  get transcription() {\n    throw new DeepgramVersionError();\n  }\n  /**\n   * @deprecated\n   * @see https://dpgr.am/js-v3\n   */\n  get projects() {\n    throw new DeepgramVersionError();\n  }\n  /**\n   * @deprecated\n   * @see https://dpgr.am/js-v3\n   */\n  get keys() {\n    throw new DeepgramVersionError();\n  }\n  /**\n   * @deprecated\n   * @see https://dpgr.am/js-v3\n   */\n  get members() {\n    throw new DeepgramVersionError();\n  }\n  /**\n   * @deprecated\n   * @see https://dpgr.am/js-v3\n   */\n  get scopes() {\n    throw new DeepgramVersionError();\n  }\n  /**\n   * @deprecated\n   * @see https://dpgr.am/js-v3\n   */\n  get invitation() {\n    throw new DeepgramVersionError();\n  }\n  /**\n   * @deprecated\n   * @see https://dpgr.am/js-v3\n   */\n  get usage() {\n    throw new DeepgramVersionError();\n  }\n  /**\n   * @deprecated\n   * @see https://dpgr.am/js-v3\n   */\n  get billing() {\n    throw new DeepgramVersionError();\n  }\n}","map":{"version":3,"names":["DeepgramVersionError","AbstractClient","AgentLiveClient","ListenClient","ManageClient","ReadClient","SelfHostedRestClient","SpeakClient","ModelsRestClient","DeepgramClient","listen","options","manage","models","onprem","selfhosted","read","speak","agent","endpoint","transcription","projects","keys","members","scopes","invitation","usage","billing"],"sources":["/Users/niko/node_modules/.pnpm/@deepgram+sdk@3.11.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@deepgram/sdk/src/DeepgramClient.ts"],"sourcesContent":["import { DeepgramVersionError } from \"./lib/errors\";\nimport {\n  AbstractClient,\n  AgentLiveClient,\n  ListenClient,\n  ManageClient,\n  ReadClient,\n  OnPremClient,\n  SelfHostedRestClient,\n  SpeakClient,\n  ModelsRestClient,\n} from \"./packages\";\n\n/**\n * The DeepgramClient class provides access to various Deepgram API clients, including ListenClient, ManageClient, SelfHostedRestClient, ReadClient, and SpeakClient.\n *\n * @see https://github.com/deepgram/deepgram-js-sdk\n */\nexport default class DeepgramClient extends AbstractClient {\n  /**\n   * Returns a new instance of the ListenClient, which provides access to the Deepgram API's listening functionality.\n   *\n   * @returns {ListenClient} A new instance of the ListenClient.\n   */\n  get listen(): ListenClient {\n    return new ListenClient(this.options);\n  }\n\n  /**\n   * Returns a new instance of the ManageClient, which provides access to the Deepgram API's management functionality.\n   *\n   * @returns {ManageClient} A new instance of the ManageClient.\n   */\n  get manage(): ManageClient {\n    return new ManageClient(this.options);\n  }\n\n  /**\n   * Returns a new instance of the ModelsRestClient, which provides access to the Deepgram API's model functionality.\n   *\n   * @returns {ModelsRestClient} A new instance of the ModelsRestClient.\n   */\n  get models(): ModelsRestClient {\n    return new ModelsRestClient(this.options);\n  }\n\n  /**\n   * Returns a new instance of the SelfHostedRestClient, which provides access to the Deepgram API's self-hosted functionality.\n   *\n   * @returns {OnPremClient} A new instance of the SelfHostedRestClient named as OnPremClient.\n   * @deprecated use selfhosted() instead\n   */\n  get onprem(): OnPremClient {\n    return this.selfhosted;\n  }\n\n  /**\n   * Returns a new instance of the SelfHostedRestClient, which provides access to the Deepgram API's self-hosted functionality.\n   *\n   * @returns {SelfHostedRestClient} A new instance of the SelfHostedRestClient.\n   */\n  get selfhosted(): SelfHostedRestClient {\n    return new SelfHostedRestClient(this.options);\n  }\n\n  /**\n   * Returns a new instance of the ReadClient, which provides access to the Deepgram API's reading functionality.\n   *\n   * @returns {ReadClient} A new instance of the ReadClient.\n   */\n  get read(): ReadClient {\n    return new ReadClient(this.options);\n  }\n\n  /**\n   * Returns a new instance of the SpeakClient, which provides access to the Deepgram API's speaking functionality.\n   *\n   * @returns {SpeakClient} A new instance of the SpeakClient.\n   */\n  get speak(): SpeakClient {\n    return new SpeakClient(this.options);\n  }\n\n  /**\n   * Returns a new instance of the AgentLiveClient, which provides access to Deepgram's Voice Agent API.\n   *\n   * @returns {AgentLiveClient} A new instance of the AgentLiveClient.\n   * @beta\n   */\n  public agent(endpoint: string = \"/agent\"): AgentLiveClient {\n    return new AgentLiveClient(this.options, endpoint);\n  }\n\n  /**\n   * @deprecated\n   * @see https://dpgr.am/js-v3\n   */\n  get transcription(): any {\n    throw new DeepgramVersionError();\n  }\n\n  /**\n   * @deprecated\n   * @see https://dpgr.am/js-v3\n   */\n  get projects(): any {\n    throw new DeepgramVersionError();\n  }\n\n  /**\n   * @deprecated\n   * @see https://dpgr.am/js-v3\n   */\n  get keys(): any {\n    throw new DeepgramVersionError();\n  }\n\n  /**\n   * @deprecated\n   * @see https://dpgr.am/js-v3\n   */\n  get members(): any {\n    throw new DeepgramVersionError();\n  }\n\n  /**\n   * @deprecated\n   * @see https://dpgr.am/js-v3\n   */\n  get scopes(): any {\n    throw new DeepgramVersionError();\n  }\n\n  /**\n   * @deprecated\n   * @see https://dpgr.am/js-v3\n   */\n  get invitation(): any {\n    throw new DeepgramVersionError();\n  }\n\n  /**\n   * @deprecated\n   * @see https://dpgr.am/js-v3\n   */\n  get usage(): any {\n    throw new DeepgramVersionError();\n  }\n\n  /**\n   * @deprecated\n   * @see https://dpgr.am/js-v3\n   */\n  get billing(): any {\n    throw new DeepgramVersionError();\n  }\n}\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,cAAc;AACnD,SACEC,cAAc,EACdC,eAAe,EACfC,YAAY,EACZC,YAAY,EACZC,UAAU,EAEVC,oBAAoB,EACpBC,WAAW,EACXC,gBAAgB,QACX,YAAY;AAEnB;;;;;AAKA,eAAc,MAAOC,cAAe,SAAQR,cAAc;EACxD;;;;;EAKA,IAAIS,MAAMA,CAAA;IACR,OAAO,IAAIP,YAAY,CAAC,IAAI,CAACQ,OAAO,CAAC;EACvC;EAEA;;;;;EAKA,IAAIC,MAAMA,CAAA;IACR,OAAO,IAAIR,YAAY,CAAC,IAAI,CAACO,OAAO,CAAC;EACvC;EAEA;;;;;EAKA,IAAIE,MAAMA,CAAA;IACR,OAAO,IAAIL,gBAAgB,CAAC,IAAI,CAACG,OAAO,CAAC;EAC3C;EAEA;;;;;;EAMA,IAAIG,MAAMA,CAAA;IACR,OAAO,IAAI,CAACC,UAAU;EACxB;EAEA;;;;;EAKA,IAAIA,UAAUA,CAAA;IACZ,OAAO,IAAIT,oBAAoB,CAAC,IAAI,CAACK,OAAO,CAAC;EAC/C;EAEA;;;;;EAKA,IAAIK,IAAIA,CAAA;IACN,OAAO,IAAIX,UAAU,CAAC,IAAI,CAACM,OAAO,CAAC;EACrC;EAEA;;;;;EAKA,IAAIM,KAAKA,CAAA;IACP,OAAO,IAAIV,WAAW,CAAC,IAAI,CAACI,OAAO,CAAC;EACtC;EAEA;;;;;;EAMOO,KAAKA,CAACC,QAAA,GAAmB,QAAQ;IACtC,OAAO,IAAIjB,eAAe,CAAC,IAAI,CAACS,OAAO,EAAEQ,QAAQ,CAAC;EACpD;EAEA;;;;EAIA,IAAIC,aAAaA,CAAA;IACf,MAAM,IAAIpB,oBAAoB,EAAE;EAClC;EAEA;;;;EAIA,IAAIqB,QAAQA,CAAA;IACV,MAAM,IAAIrB,oBAAoB,EAAE;EAClC;EAEA;;;;EAIA,IAAIsB,IAAIA,CAAA;IACN,MAAM,IAAItB,oBAAoB,EAAE;EAClC;EAEA;;;;EAIA,IAAIuB,OAAOA,CAAA;IACT,MAAM,IAAIvB,oBAAoB,EAAE;EAClC;EAEA;;;;EAIA,IAAIwB,MAAMA,CAAA;IACR,MAAM,IAAIxB,oBAAoB,EAAE;EAClC;EAEA;;;;EAIA,IAAIyB,UAAUA,CAAA;IACZ,MAAM,IAAIzB,oBAAoB,EAAE;EAClC;EAEA;;;;EAIA,IAAI0B,KAAKA,CAAA;IACP,MAAM,IAAI1B,oBAAoB,EAAE;EAClC;EAEA;;;;EAIA,IAAI2B,OAAOA,CAAA;IACT,MAAM,IAAI3B,oBAAoB,EAAE;EAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}