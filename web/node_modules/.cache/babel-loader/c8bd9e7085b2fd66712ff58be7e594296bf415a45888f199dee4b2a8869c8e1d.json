{"ast":null,"code":"var _jsxFileName = \"/Users/niko/digital-human/frontend/src/contexts/NotificationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useCallback } from 'react';\n\n// 创建上下文\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext();\n\n// 通知提供者组件\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n\n  // 显示通知\n  const showNotification = useCallback((message, type = 'info', duration = 5000) => {\n    const id = Date.now() + Math.random().toString(36).substr(2, 5);\n    const notification = {\n      id,\n      message,\n      type,\n      duration\n    };\n    setNotifications(prev => [...prev, notification]);\n\n    // 设置自动关闭\n    if (duration > 0) {\n      setTimeout(() => {\n        closeNotification(id);\n      }, duration);\n    }\n    return id;\n  }, [closeNotification]);\n\n  // 关闭通知\n  const closeNotification = useCallback(id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  }, []);\n\n  // 便捷方法\n  const info = useCallback((message, duration = 5000) => {\n    return showNotification(message, 'info', duration);\n  }, [showNotification]);\n  const success = useCallback((message, duration = 5000) => {\n    return showNotification(message, 'success', duration);\n  }, [showNotification]);\n  const error = useCallback((message, duration = 7000) => {\n    return showNotification(message, 'error', duration);\n  }, [showNotification]);\n  const warning = useCallback((message, duration = 6000) => {\n    return showNotification(message, 'warning', duration);\n  }, [showNotification]);\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: {\n      notifications,\n      showNotification,\n      closeNotification,\n      info,\n      success,\n      error,\n      warning\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n// 自定义Hook，用于在组件中访问通知功能\n_s(NotificationProvider, \"H8ujeedR/Hj9ApbZZD0/HzReMl4=\");\n_c = NotificationProvider;\nexport const useNotification = () => {\n  _s2();\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n};\n_s2(useNotification, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useCallback","jsxDEV","_jsxDEV","NotificationContext","NotificationProvider","children","_s","notifications","setNotifications","showNotification","message","type","duration","id","Date","now","Math","random","toString","substr","notification","prev","setTimeout","closeNotification","filter","info","success","error","warning","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useNotification","_s2","context","Error","$RefreshReg$"],"sources":["/Users/niko/digital-human/frontend/src/contexts/NotificationContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback } from 'react';\n\n// 创建上下文\nconst NotificationContext = createContext();\n\n// 通知提供者组件\nexport const NotificationProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n\n  // 显示通知\n  const showNotification = useCallback((message, type = 'info', duration = 5000) => {\n    const id = Date.now() + Math.random().toString(36).substr(2, 5);\n    const notification = { id, message, type, duration };\n    \n    setNotifications(prev => [...prev, notification]);\n    \n    // 设置自动关闭\n    if (duration > 0) {\n      setTimeout(() => {\n        closeNotification(id);\n      }, duration);\n    }\n    \n    return id;\n  }, [closeNotification]);\n\n  // 关闭通知\n  const closeNotification = useCallback((id) => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  }, []);\n\n  // 便捷方法\n  const info = useCallback((message, duration = 5000) => {\n    return showNotification(message, 'info', duration);\n  }, [showNotification]);\n\n  const success = useCallback((message, duration = 5000) => {\n    return showNotification(message, 'success', duration);\n  }, [showNotification]);\n\n  const error = useCallback((message, duration = 7000) => {\n    return showNotification(message, 'error', duration);\n  }, [showNotification]);\n\n  const warning = useCallback((message, duration = 6000) => {\n    return showNotification(message, 'warning', duration);\n  }, [showNotification]);\n\n  return (\n    <NotificationContext.Provider \n      value={{ \n        notifications, \n        showNotification, \n        closeNotification,\n        info,\n        success,\n        error,\n        warning\n      }}\n    >\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n\n// 自定义Hook，用于在组件中访问通知功能\nexport const useNotification = () => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}